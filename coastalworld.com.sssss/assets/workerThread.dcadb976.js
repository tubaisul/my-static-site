//  Merci-Michel [R]
//  https://www.merci-michel.com/
//  Build 20221103-110025

!function(){"use strict";function t(){return("undefined"==typeof performance?Date:performance).now()}const s=[];for(let ti=0;ti<256;ti++)s[ti]=(ti<16?"0":"")+ti.toString(16);function i(t,s,i){return Math.max(s,Math.min(i,t))}function e(t,s,i){return(1-i)*t+i*s}class r{constructor(t=0,s=0,i=0,e=1){this.isQuaternion=!0,this._x=t,this._y=s,this._z=i,this._w=e}static slerp(t,s,i,e){return i.slerpQuaternions(t,s,e)}static slerpFlat(t,s,i,e,r,n,o){let h=i[e+0],a=i[e+1],l=i[e+2],c=i[e+3];const u=r[n+0],d=r[n+1],y=r[n+2],p=r[n+3];if(0===o)return t[s+0]=h,t[s+1]=a,t[s+2]=l,void(t[s+3]=c);if(1===o)return t[s+0]=u,t[s+1]=d,t[s+2]=y,void(t[s+3]=p);if(c!==p||h!==u||a!==d||l!==y){let t=1-o;const s=h*u+a*d+l*y+c*p,i=s>=0?1:-1,e=1-s*s;if(e>Number.EPSILON){const r=Math.sqrt(e),n=Math.atan2(r,s*i);t=Math.sin(t*n)/r,o=Math.sin(o*n)/r}const r=o*i;if(h=h*t+u*r,a=a*t+d*r,l=l*t+y*r,c=c*t+p*r,t===1-o){const t=1/Math.sqrt(h*h+a*a+l*l+c*c);h*=t,a*=t,l*=t,c*=t}}t[s]=h,t[s+1]=a,t[s+2]=l,t[s+3]=c}static multiplyQuaternionsFlat(t,s,i,e,r,n){const o=i[e],h=i[e+1],a=i[e+2],l=i[e+3],c=r[n],u=r[n+1],d=r[n+2],y=r[n+3];return t[s]=o*y+l*c+h*d-a*u,t[s+1]=h*y+l*u+a*c-o*d,t[s+2]=a*y+l*d+o*u-h*c,t[s+3]=l*y-o*c-h*u-a*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,s,i,e){return this._x=t,this._y=s,this._z=i,this._w=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,s){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=t._x,e=t._y,r=t._z,n=t._order,o=Math.cos,h=Math.sin,a=o(i/2),l=o(e/2),c=o(r/2),u=h(i/2),d=h(e/2),y=h(r/2);switch(n){case"XYZ":this._x=u*l*c+a*d*y,this._y=a*d*c-u*l*y,this._z=a*l*y+u*d*c,this._w=a*l*c-u*d*y;break;case"YXZ":this._x=u*l*c+a*d*y,this._y=a*d*c-u*l*y,this._z=a*l*y-u*d*c,this._w=a*l*c+u*d*y;break;case"ZXY":this._x=u*l*c-a*d*y,this._y=a*d*c+u*l*y,this._z=a*l*y+u*d*c,this._w=a*l*c-u*d*y;break;case"ZYX":this._x=u*l*c-a*d*y,this._y=a*d*c+u*l*y,this._z=a*l*y-u*d*c,this._w=a*l*c+u*d*y;break;case"YZX":this._x=u*l*c+a*d*y,this._y=a*d*c+u*l*y,this._z=a*l*y-u*d*c,this._w=a*l*c-u*d*y;break;case"XZY":this._x=u*l*c-a*d*y,this._y=a*d*c-u*l*y,this._z=a*l*y+u*d*c,this._w=a*l*c+u*d*y}return!1!==s&&this._onChangeCallback(),this}setFromAxisAngle(t,s){const i=s/2,e=Math.sin(i);return this._x=t.x*e,this._y=t.y*e,this._z=t.z*e,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const s=t.elements,i=s[0],e=s[4],r=s[8],n=s[1],o=s[5],h=s[9],a=s[2],l=s[6],c=s[10],u=i+o+c;if(u>0){const t=.5/Math.sqrt(u+1);this._w=.25/t,this._x=(l-h)*t,this._y=(r-a)*t,this._z=(n-e)*t}else if(i>o&&i>c){const t=2*Math.sqrt(1+i-o-c);this._w=(l-h)/t,this._x=.25*t,this._y=(e+n)/t,this._z=(r+a)/t}else if(o>c){const t=2*Math.sqrt(1+o-i-c);this._w=(r-a)/t,this._x=(e+n)/t,this._y=.25*t,this._z=(h+l)/t}else{const t=2*Math.sqrt(1+c-i-o);this._w=(n-e)/t,this._x=(r+a)/t,this._y=(h+l)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,s){let i=t.dot(s)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*s.z-t.z*s.y,this._y=t.z*s.x-t.x*s.z,this._z=t.x*s.y-t.y*s.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(i(this.dot(t),-1,1)))}rotateTowards(t,s){const i=this.angleTo(t);if(0===i)return this;const e=Math.min(1,s/i);return this.slerp(t,e),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,s){return void 0!==s?this.multiplyQuaternions(t,s):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,s){const i=t._x,e=t._y,r=t._z,n=t._w,o=s._x,h=s._y,a=s._z,l=s._w;return this._x=i*l+n*o+e*a-r*h,this._y=e*l+n*h+r*o-i*a,this._z=r*l+n*a+i*h-e*o,this._w=n*l-i*o-e*h-r*a,this._onChangeCallback(),this}slerp(t,s){if(0===s)return this;if(1===s)return this.copy(t);const i=this._x,e=this._y,r=this._z,n=this._w;let o=n*t._w+i*t._x+e*t._y+r*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=n,this._x=i,this._y=e,this._z=r,this;const h=1-o*o;if(h<=Number.EPSILON){const t=1-s;return this._w=t*n+s*this._w,this._x=t*i+s*this._x,this._y=t*e+s*this._y,this._z=t*r+s*this._z,this.normalize(),this._onChangeCallback(),this}const a=Math.sqrt(h),l=Math.atan2(a,o),c=Math.sin((1-s)*l)/a,u=Math.sin(s*l)/a;return this._w=n*c+this._w*u,this._x=i*c+this._x*u,this._y=e*c+this._y*u,this._z=r*c+this._z*u,this._onChangeCallback(),this}slerpQuaternions(t,s,i){return this.copy(t).slerp(s,i)}random(){const t=Math.random(),s=Math.sqrt(1-t),i=Math.sqrt(t),e=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(s*Math.cos(e),i*Math.sin(r),i*Math.cos(r),s*Math.sin(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,s=0){return this._x=t[s],this._y=t[s+1],this._z=t[s+2],this._w=t[s+3],this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._w,t}fromBufferAttribute(t,s){return this._x=t.getX(s),this._y=t.getY(s),this._z=t.getZ(s),this._w=t.getW(s),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class n{constructor(t=0,s=0,i=0){this.isVector3=!0,this.x=t,this.y=s,this.z=i}set(t,s,i){return void 0===i&&(i=this.z),this.x=t,this.y=s,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,s){return void 0!==s?this.addVectors(t,s):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this}sub(t,s){return void 0!==s?this.subVectors(t,s):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this}multiply(t,s){return void 0!==s?this.multiplyVectors(t,s):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,s){return this.x=t.x*s.x,this.y=t.y*s.y,this.z=t.z*s.z,this}applyEuler(t){return!t||t.isEuler,this.applyQuaternion(h.setFromEuler(t))}applyAxisAngle(t,s){return this.applyQuaternion(h.setFromAxisAngle(t,s))}applyMatrix3(t){const s=this.x,i=this.y,e=this.z,r=t.elements;return this.x=r[0]*s+r[3]*i+r[6]*e,this.y=r[1]*s+r[4]*i+r[7]*e,this.z=r[2]*s+r[5]*i+r[8]*e,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const s=this.x,i=this.y,e=this.z,r=t.elements,n=1/(r[3]*s+r[7]*i+r[11]*e+r[15]);return this.x=(r[0]*s+r[4]*i+r[8]*e+r[12])*n,this.y=(r[1]*s+r[5]*i+r[9]*e+r[13])*n,this.z=(r[2]*s+r[6]*i+r[10]*e+r[14])*n,this}applyQuaternion(t){const s=this.x,i=this.y,e=this.z,r=t.x,n=t.y,o=t.z,h=t.w,a=h*s+n*e-o*i,l=h*i+o*s-r*e,c=h*e+r*i-n*s,u=-r*s-n*i-o*e;return this.x=a*h+u*-r+l*-o-c*-n,this.y=l*h+u*-n+c*-r-a*-o,this.z=c*h+u*-o+a*-n-l*-r,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const s=this.x,i=this.y,e=this.z,r=t.elements;return this.x=r[0]*s+r[4]*i+r[8]*e,this.y=r[1]*s+r[5]*i+r[9]*e,this.z=r[2]*s+r[6]*i+r[10]*e,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this}cross(t,s){return void 0!==s?this.crossVectors(t,s):this.crossVectors(this,t)}crossVectors(t,s){const i=t.x,e=t.y,r=t.z,n=s.x,o=s.y,h=s.z;return this.x=e*h-r*o,this.y=r*n-i*h,this.z=i*o-e*n,this}projectOnVector(t){const s=t.lengthSq();if(0===s)return this.set(0,0,0);const i=t.dot(this)/s;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return o.copy(this).projectOnVector(t),this.sub(o)}reflect(t){return this.sub(o.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const s=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===s)return Math.PI/2;const e=this.dot(t)/s;return Math.acos(i(e,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y,e=this.z-t.z;return s*s+i*i+e*e}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,s,i){const e=Math.sin(s)*t;return this.x=e*Math.sin(i),this.y=Math.cos(s)*t,this.z=e*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,s,i){return this.x=t*Math.sin(s),this.y=i,this.z=t*Math.cos(s),this}setFromMatrixPosition(t){const s=t.elements;return this.x=s[12],this.y=s[13],this.z=s[14],this}setFromMatrixScale(t){const s=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),e=this.setFromMatrixColumn(t,2).length();return this.x=s,this.y=i,this.z=e,this}setFromMatrixColumn(t,s){return this.fromArray(t.elements,4*s)}setFromMatrix3Column(t,s){return this.fromArray(t.elements,3*s)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t}fromBufferAttribute(t,s,i){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),s=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(s),this.y=i*Math.sin(s),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const o=new n,h=new r;class a{constructor(){this.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,s,i,e,r,n,o,h,a,l,c,u,d,y,p,m){const x=this.elements;return x[0]=t,x[4]=s,x[8]=i,x[12]=e,x[1]=r,x[5]=n,x[9]=o,x[13]=h,x[2]=a,x[6]=l,x[10]=c,x[14]=u,x[3]=d,x[7]=y,x[11]=p,x[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new a).fromArray(this.elements)}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],s[9]=i[9],s[10]=i[10],s[11]=i[11],s[12]=i[12],s[13]=i[13],s[14]=i[14],s[15]=i[15],this}copyPosition(t){const s=this.elements,i=t.elements;return s[12]=i[12],s[13]=i[13],s[14]=i[14],this}setFromMatrix3(t){const s=t.elements;return this.set(s[0],s[3],s[6],0,s[1],s[4],s[7],0,s[2],s[5],s[8],0,0,0,0,1),this}extractBasis(t,s,i){return t.setFromMatrixColumn(this,0),s.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,s,i){return this.set(t.x,s.x,i.x,0,t.y,s.y,i.y,0,t.z,s.z,i.z,0,0,0,0,1),this}extractRotation(t){const s=this.elements,i=t.elements,e=1/l.setFromMatrixColumn(t,0).length(),r=1/l.setFromMatrixColumn(t,1).length(),n=1/l.setFromMatrixColumn(t,2).length();return s[0]=i[0]*e,s[1]=i[1]*e,s[2]=i[2]*e,s[3]=0,s[4]=i[4]*r,s[5]=i[5]*r,s[6]=i[6]*r,s[7]=0,s[8]=i[8]*n,s[9]=i[9]*n,s[10]=i[10]*n,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromEuler(t){!t||t.isEuler;const s=this.elements,i=t.x,e=t.y,r=t.z,n=Math.cos(i),o=Math.sin(i),h=Math.cos(e),a=Math.sin(e),l=Math.cos(r),c=Math.sin(r);if("XYZ"===t.order){const t=n*l,i=n*c,e=o*l,r=o*c;s[0]=h*l,s[4]=-h*c,s[8]=a,s[1]=i+e*a,s[5]=t-r*a,s[9]=-o*h,s[2]=r-t*a,s[6]=e+i*a,s[10]=n*h}else if("YXZ"===t.order){const t=h*l,i=h*c,e=a*l,r=a*c;s[0]=t+r*o,s[4]=e*o-i,s[8]=n*a,s[1]=n*c,s[5]=n*l,s[9]=-o,s[2]=i*o-e,s[6]=r+t*o,s[10]=n*h}else if("ZXY"===t.order){const t=h*l,i=h*c,e=a*l,r=a*c;s[0]=t-r*o,s[4]=-n*c,s[8]=e+i*o,s[1]=i+e*o,s[5]=n*l,s[9]=r-t*o,s[2]=-n*a,s[6]=o,s[10]=n*h}else if("ZYX"===t.order){const t=n*l,i=n*c,e=o*l,r=o*c;s[0]=h*l,s[4]=e*a-i,s[8]=t*a+r,s[1]=h*c,s[5]=r*a+t,s[9]=i*a-e,s[2]=-a,s[6]=o*h,s[10]=n*h}else if("YZX"===t.order){const t=n*h,i=n*a,e=o*h,r=o*a;s[0]=h*l,s[4]=r-t*c,s[8]=e*c+i,s[1]=c,s[5]=n*l,s[9]=-o*l,s[2]=-a*l,s[6]=i*c+e,s[10]=t-r*c}else if("XZY"===t.order){const t=n*h,i=n*a,e=o*h,r=o*a;s[0]=h*l,s[4]=-c,s[8]=a*l,s[1]=t*c+r,s[5]=n*l,s[9]=i*c-e,s[2]=e*c-i,s[6]=o*l,s[10]=r*c+t}return s[3]=0,s[7]=0,s[11]=0,s[12]=0,s[13]=0,s[14]=0,s[15]=1,this}makeRotationFromQuaternion(t){return this.compose(u,t,d)}lookAt(t,s,i){const e=this.elements;return m.subVectors(t,s),0===m.lengthSq()&&(m.z=1),m.normalize(),y.crossVectors(i,m),0===y.lengthSq()&&(1===Math.abs(i.z)?m.x+=1e-4:m.z+=1e-4,m.normalize(),y.crossVectors(i,m)),y.normalize(),p.crossVectors(m,y),e[0]=y.x,e[4]=p.x,e[8]=m.x,e[1]=y.y,e[5]=p.y,e[9]=m.y,e[2]=y.z,e[6]=p.z,e[10]=m.z,this}multiply(t,s){return void 0!==s?this.multiplyMatrices(t,s):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,e=s.elements,r=this.elements,n=i[0],o=i[4],h=i[8],a=i[12],l=i[1],c=i[5],u=i[9],d=i[13],y=i[2],p=i[6],m=i[10],x=i[14],g=i[3],f=i[7],v=i[11],M=i[15],w=e[0],z=e[4],b=e[8],S=e[12],_=e[1],C=e[5],P=e[9],A=e[13],k=e[2],T=e[6],O=e[10],F=e[14],V=e[3],q=e[7],I=e[11],B=e[15];return r[0]=n*w+o*_+h*k+a*V,r[4]=n*z+o*C+h*T+a*q,r[8]=n*b+o*P+h*O+a*I,r[12]=n*S+o*A+h*F+a*B,r[1]=l*w+c*_+u*k+d*V,r[5]=l*z+c*C+u*T+d*q,r[9]=l*b+c*P+u*O+d*I,r[13]=l*S+c*A+u*F+d*B,r[2]=y*w+p*_+m*k+x*V,r[6]=y*z+p*C+m*T+x*q,r[10]=y*b+p*P+m*O+x*I,r[14]=y*S+p*A+m*F+x*B,r[3]=g*w+f*_+v*k+M*V,r[7]=g*z+f*C+v*T+M*q,r[11]=g*b+f*P+v*O+M*I,r[15]=g*S+f*A+v*F+M*B,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[4]*=t,s[8]*=t,s[12]*=t,s[1]*=t,s[5]*=t,s[9]*=t,s[13]*=t,s[2]*=t,s[6]*=t,s[10]*=t,s[14]*=t,s[3]*=t,s[7]*=t,s[11]*=t,s[15]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[4],e=t[8],r=t[12],n=t[1],o=t[5],h=t[9],a=t[13],l=t[2],c=t[6],u=t[10],d=t[14];return t[3]*(+r*h*c-e*a*c-r*o*u+i*a*u+e*o*d-i*h*d)+t[7]*(+s*h*d-s*a*u+r*n*u-e*n*d+e*a*l-r*h*l)+t[11]*(+s*a*c-s*o*d-r*n*c+i*n*d+r*o*l-i*a*l)+t[15]*(-e*o*l-s*h*c+s*o*u+e*n*c-i*n*u+i*h*l)}transpose(){const t=this.elements;let s;return s=t[1],t[1]=t[4],t[4]=s,s=t[2],t[2]=t[8],t[8]=s,s=t[6],t[6]=t[9],t[9]=s,s=t[3],t[3]=t[12],t[12]=s,s=t[7],t[7]=t[13],t[13]=s,s=t[11],t[11]=t[14],t[14]=s,this}setPosition(t,s,i){const e=this.elements;return t.isVector3?(e[12]=t.x,e[13]=t.y,e[14]=t.z):(e[12]=t,e[13]=s,e[14]=i),this}invert(){const t=this.elements,s=t[0],i=t[1],e=t[2],r=t[3],n=t[4],o=t[5],h=t[6],a=t[7],l=t[8],c=t[9],u=t[10],d=t[11],y=t[12],p=t[13],m=t[14],x=t[15],g=c*m*a-p*u*a+p*h*d-o*m*d-c*h*x+o*u*x,f=y*u*a-l*m*a-y*h*d+n*m*d+l*h*x-n*u*x,v=l*p*a-y*c*a+y*o*d-n*p*d-l*o*x+n*c*x,M=y*c*h-l*p*h-y*o*u+n*p*u+l*o*m-n*c*m,w=s*g+i*f+e*v+r*M;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const z=1/w;return t[0]=g*z,t[1]=(p*u*r-c*m*r-p*e*d+i*m*d+c*e*x-i*u*x)*z,t[2]=(o*m*r-p*h*r+p*e*a-i*m*a-o*e*x+i*h*x)*z,t[3]=(c*h*r-o*u*r-c*e*a+i*u*a+o*e*d-i*h*d)*z,t[4]=f*z,t[5]=(l*m*r-y*u*r+y*e*d-s*m*d-l*e*x+s*u*x)*z,t[6]=(y*h*r-n*m*r-y*e*a+s*m*a+n*e*x-s*h*x)*z,t[7]=(n*u*r-l*h*r+l*e*a-s*u*a-n*e*d+s*h*d)*z,t[8]=v*z,t[9]=(y*c*r-l*p*r-y*i*d+s*p*d+l*i*x-s*c*x)*z,t[10]=(n*p*r-y*o*r+y*i*a-s*p*a-n*i*x+s*o*x)*z,t[11]=(l*o*r-n*c*r-l*i*a+s*c*a+n*i*d-s*o*d)*z,t[12]=M*z,t[13]=(l*p*e-y*c*e+y*i*u-s*p*u-l*i*m+s*c*m)*z,t[14]=(y*o*e-n*p*e-y*i*h+s*p*h+n*i*m-s*o*m)*z,t[15]=(n*c*e-l*o*e+l*i*h-s*c*h-n*i*u+s*o*u)*z,this}scale(t){const s=this.elements,i=t.x,e=t.y,r=t.z;return s[0]*=i,s[4]*=e,s[8]*=r,s[1]*=i,s[5]*=e,s[9]*=r,s[2]*=i,s[6]*=e,s[10]*=r,s[3]*=i,s[7]*=e,s[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,s=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],e=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(s,i,e))}makeTranslation(t,s,i){return this.set(1,0,0,t,0,1,0,s,0,0,1,i,0,0,0,1),this}makeRotationX(t){const s=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,s,-i,0,0,i,s,0,0,0,0,1),this}makeRotationY(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,0,i,0,0,1,0,0,-i,0,s,0,0,0,0,1),this}makeRotationZ(t){const s=Math.cos(t),i=Math.sin(t);return this.set(s,-i,0,0,i,s,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,s){const i=Math.cos(s),e=Math.sin(s),r=1-i,n=t.x,o=t.y,h=t.z,a=r*n,l=r*o;return this.set(a*n+i,a*o-e*h,a*h+e*o,0,a*o+e*h,l*o+i,l*h-e*n,0,a*h-e*o,l*h+e*n,r*h*h+i,0,0,0,0,1),this}makeScale(t,s,i){return this.set(t,0,0,0,0,s,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,s,i,e,r,n){return this.set(1,i,r,0,t,1,n,0,s,e,1,0,0,0,0,1),this}compose(t,s,i){const e=this.elements,r=s._x,n=s._y,o=s._z,h=s._w,a=r+r,l=n+n,c=o+o,u=r*a,d=r*l,y=r*c,p=n*l,m=n*c,x=o*c,g=h*a,f=h*l,v=h*c,M=i.x,w=i.y,z=i.z;return e[0]=(1-(p+x))*M,e[1]=(d+v)*M,e[2]=(y-f)*M,e[3]=0,e[4]=(d-v)*w,e[5]=(1-(u+x))*w,e[6]=(m+g)*w,e[7]=0,e[8]=(y+f)*z,e[9]=(m-g)*z,e[10]=(1-(u+p))*z,e[11]=0,e[12]=t.x,e[13]=t.y,e[14]=t.z,e[15]=1,this}decompose(t,s,i){const e=this.elements;let r=l.set(e[0],e[1],e[2]).length();const n=l.set(e[4],e[5],e[6]).length(),o=l.set(e[8],e[9],e[10]).length();this.determinant()<0&&(r=-r),t.x=e[12],t.y=e[13],t.z=e[14],c.copy(this);const h=1/r,a=1/n,u=1/o;return c.elements[0]*=h,c.elements[1]*=h,c.elements[2]*=h,c.elements[4]*=a,c.elements[5]*=a,c.elements[6]*=a,c.elements[8]*=u,c.elements[9]*=u,c.elements[10]*=u,s.setFromRotationMatrix(c),i.x=r,i.y=n,i.z=o,this}makePerspective(t,s,i,e,r,n){const o=this.elements,h=2*r/(s-t),a=2*r/(i-e),l=(s+t)/(s-t),c=(i+e)/(i-e),u=-(n+r)/(n-r),d=-2*n*r/(n-r);return o[0]=h,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=a,o[9]=c,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=d,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(t,s,i,e,r,n){const o=this.elements,h=1/(s-t),a=1/(i-e),l=1/(n-r),c=(s+t)*h,u=(i+e)*a,d=(n+r)*l;return o[0]=2*h,o[4]=0,o[8]=0,o[12]=-c,o[1]=0,o[5]=2*a,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*l,o[14]=-d,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(t){const s=this.elements,i=t.elements;for(let e=0;e<16;e++)if(s[e]!==i[e])return!1;return!0}fromArray(t,s=0){for(let i=0;i<16;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t[s+9]=i[9],t[s+10]=i[10],t[s+11]=i[11],t[s+12]=i[12],t[s+13]=i[13],t[s+14]=i[14],t[s+15]=i[15],t}}const l=new n,c=new a,u=new n(0,0,0),d=new n(1,1,1),y=new n,p=new n,m=new n;const x=new a,g=new r;class f{constructor(t=0,s=0,i=0,e=f.DefaultOrder){this.isEuler=!0,this._x=t,this._y=s,this._z=i,this._order=e}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,s,i,e=this._order){return this._x=t,this._y=s,this._z=i,this._order=e,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,s=this._order,e=!0){const r=t.elements,n=r[0],o=r[4],h=r[8],a=r[1],l=r[5],c=r[9],u=r[2],d=r[6],y=r[10];switch(s){case"XYZ":this._y=Math.asin(i(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-c,y),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-i(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(h,y),this._z=Math.atan2(a,l)):(this._y=Math.atan2(-u,n),this._z=0);break;case"ZXY":this._x=Math.asin(i(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,y),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(a,n));break;case"ZYX":this._y=Math.asin(-i(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,y),this._z=Math.atan2(a,n)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(i(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,n)):(this._x=0,this._y=Math.atan2(h,y));break;case"XZY":this._z=Math.asin(-i(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(h,n)):(this._x=Math.atan2(-c,y),this._y=0)}return this._order=s,!0===e&&this._onChangeCallback(),this}setFromQuaternion(t,s,i){return x.makeRotationFromQuaternion(t),this.setFromRotationMatrix(x,s,i)}setFromVector3(t,s=this._order){return this.set(t.x,t.y,t.z,s)}reorder(t){return g.setFromEuler(this),this.setFromQuaternion(g,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],s=0){return t[s]=this._x,t[s+1]=this._y,t[s+2]=this._z,t[s+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){}}f.DefaultOrder="XYZ",f.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class v{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}class M{constructor(){this.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,s,i,e,r,n,o,h,a){const l=this.elements;return l[0]=t,l[1]=e,l[2]=o,l[3]=s,l[4]=r,l[5]=h,l[6]=i,l[7]=n,l[8]=a,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const s=this.elements,i=t.elements;return s[0]=i[0],s[1]=i[1],s[2]=i[2],s[3]=i[3],s[4]=i[4],s[5]=i[5],s[6]=i[6],s[7]=i[7],s[8]=i[8],this}extractBasis(t,s,i){return t.setFromMatrix3Column(this,0),s.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const s=t.elements;return this.set(s[0],s[4],s[8],s[1],s[5],s[9],s[2],s[6],s[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,s){const i=t.elements,e=s.elements,r=this.elements,n=i[0],o=i[3],h=i[6],a=i[1],l=i[4],c=i[7],u=i[2],d=i[5],y=i[8],p=e[0],m=e[3],x=e[6],g=e[1],f=e[4],v=e[7],M=e[2],w=e[5],z=e[8];return r[0]=n*p+o*g+h*M,r[3]=n*m+o*f+h*w,r[6]=n*x+o*v+h*z,r[1]=a*p+l*g+c*M,r[4]=a*m+l*f+c*w,r[7]=a*x+l*v+c*z,r[2]=u*p+d*g+y*M,r[5]=u*m+d*f+y*w,r[8]=u*x+d*v+y*z,this}multiplyScalar(t){const s=this.elements;return s[0]*=t,s[3]*=t,s[6]*=t,s[1]*=t,s[4]*=t,s[7]*=t,s[2]*=t,s[5]*=t,s[8]*=t,this}determinant(){const t=this.elements,s=t[0],i=t[1],e=t[2],r=t[3],n=t[4],o=t[5],h=t[6],a=t[7],l=t[8];return s*n*l-s*o*a-i*r*l+i*o*h+e*r*a-e*n*h}invert(){const t=this.elements,s=t[0],i=t[1],e=t[2],r=t[3],n=t[4],o=t[5],h=t[6],a=t[7],l=t[8],c=l*n-o*a,u=o*h-l*r,d=a*r-n*h,y=s*c+i*u+e*d;if(0===y)return this.set(0,0,0,0,0,0,0,0,0);const p=1/y;return t[0]=c*p,t[1]=(e*a-l*i)*p,t[2]=(o*i-e*n)*p,t[3]=u*p,t[4]=(l*s-e*h)*p,t[5]=(e*r-o*s)*p,t[6]=d*p,t[7]=(i*h-a*s)*p,t[8]=(n*s-i*r)*p,this}transpose(){let t;const s=this.elements;return t=s[1],s[1]=s[3],s[3]=t,t=s[2],s[2]=s[6],s[6]=t,t=s[5],s[5]=s[7],s[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const s=this.elements;return t[0]=s[0],t[1]=s[3],t[2]=s[6],t[3]=s[1],t[4]=s[4],t[5]=s[7],t[6]=s[2],t[7]=s[5],t[8]=s[8],this}setUvTransform(t,s,i,e,r,n,o){const h=Math.cos(r),a=Math.sin(r);return this.set(i*h,i*a,-i*(h*n+a*o)+n+t,-e*a,e*h,-e*(-a*n+h*o)+o+s,0,0,1),this}scale(t,s){const i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=s,i[4]*=s,i[7]*=s,this}rotate(t){const s=Math.cos(t),i=Math.sin(t),e=this.elements,r=e[0],n=e[3],o=e[6],h=e[1],a=e[4],l=e[7];return e[0]=s*r+i*h,e[3]=s*n+i*a,e[6]=s*o+i*l,e[1]=-i*r+s*h,e[4]=-i*n+s*a,e[7]=-i*o+s*l,this}translate(t,s){const i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=s*i[2],i[4]+=s*i[5],i[7]+=s*i[8],this}equals(t){const s=this.elements,i=t.elements;for(let e=0;e<9;e++)if(s[e]!==i[e])return!1;return!0}fromArray(t,s=0){for(let i=0;i<9;i++)this.elements[i]=t[i+s];return this}toArray(t=[],s=0){const i=this.elements;return t[s]=i[0],t[s+1]=i[1],t[s+2]=i[2],t[s+3]=i[3],t[s+4]=i[4],t[s+5]=i[5],t[s+6]=i[6],t[s+7]=i[7],t[s+8]=i[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}let w=0;const z=new n,b=new r,S=new a,_=new n,C=new n,P=new n,A=new r,k=new n(1,0,0),T=new n(0,1,0),O=new n(0,0,1),F={type:"added"},V={type:"removed"};class q extends class{addEventListener(t,s){void 0===this._listeners&&(this._listeners={});const i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(s)&&i[t].push(s)}hasEventListener(t,s){if(void 0===this._listeners)return!1;const i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(s)}removeEventListener(t,s){if(void 0===this._listeners)return;const i=this._listeners[t];if(void 0!==i){const t=i.indexOf(s);-1!==t&&i.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const s=this._listeners[t.type];if(void 0!==s){t.target=this;const i=s.slice(0);for(let s=0,e=i.length;s<e;s++)i[s].call(this,t);t.target=null}}}{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:w++}),this.uuid=function(){const t=4294967295*Math.random()|0,i=4294967295*Math.random()|0,e=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(s[255&t]+s[t>>8&255]+s[t>>16&255]+s[t>>24&255]+"-"+s[255&i]+s[i>>8&255]+"-"+s[i>>16&15|64]+s[i>>24&255]+"-"+s[63&e|128]+s[e>>8&255]+"-"+s[e>>16&255]+s[e>>24&255]+s[255&r]+s[r>>8&255]+s[r>>16&255]+s[r>>24&255]).toLowerCase()}(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=q.DefaultUp.clone();const t=new n,i=new f,e=new r,o=new n(1,1,1);i._onChange((function(){e.setFromEuler(i,!1)})),e._onChange((function(){i.setFromQuaternion(e,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:i},quaternion:{configurable:!0,enumerable:!0,value:e},scale:{configurable:!0,enumerable:!0,value:o},modelViewMatrix:{value:new a},normalMatrix:{value:new M}}),this.matrix=new a,this.matrixWorld=new a,this.matrixAutoUpdate=q.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new v,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,s){this.quaternion.setFromAxisAngle(t,s)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,s){return b.setFromAxisAngle(t,s),this.quaternion.multiply(b),this}rotateOnWorldAxis(t,s){return b.setFromAxisAngle(t,s),this.quaternion.premultiply(b),this}rotateX(t){return this.rotateOnAxis(k,t)}rotateY(t){return this.rotateOnAxis(T,t)}rotateZ(t){return this.rotateOnAxis(O,t)}translateOnAxis(t,s){return z.copy(t).applyQuaternion(this.quaternion),this.position.add(z.multiplyScalar(s)),this}translateX(t){return this.translateOnAxis(k,t)}translateY(t){return this.translateOnAxis(T,t)}translateZ(t){return this.translateOnAxis(O,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(S.copy(this.matrixWorld).invert())}lookAt(t,s,i){t.isVector3?_.copy(t):_.set(t,s,i);const e=this.parent;this.updateWorldMatrix(!0,!1),C.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?S.lookAt(C,_,this.up):S.lookAt(_,C,this.up),this.quaternion.setFromRotationMatrix(S),e&&(S.extractRotation(e.matrixWorld),b.setFromRotationMatrix(S),this.quaternion.premultiply(b.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this||t&&t.isObject3D&&(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(F)),this}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const s=this.children.indexOf(t);return-1!==s&&(t.parent=null,this.children.splice(s,1),t.dispatchEvent(V)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const s=this.children[t];s.parent=null,s.dispatchEvent(V)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),S.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),S.multiply(t.parent.matrixWorld)),t.applyMatrix4(S),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,s){if(this[t]===s)return this;for(let i=0,e=this.children.length;i<e;i++){const e=this.children[i].getObjectByProperty(t,s);if(void 0!==e)return e}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(C,t,P),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(C,A,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const s=this.matrixWorld.elements;return t.set(s[8],s[9],s[10]).normalize()}raycast(){}traverse(t){t(this);const s=this.children;for(let i=0,e=s.length;i<e;i++)s[i].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const s=this.children;for(let i=0,e=s.length;i<e;i++)s[i].traverseVisible(t)}traverseAncestors(t){const s=this.parent;null!==s&&(t(s),s.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const s=this.children;for(let i=0,e=s.length;i<e;i++)s[i].updateMatrixWorld(t)}updateWorldMatrix(t,s){const i=this.parent;if(!0===t&&null!==i&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===s){const t=this.children;for(let s=0,i=t.length;s<i;s++)t[s].updateWorldMatrix(!1,!0)}}toJSON(t){const s=void 0===t||"string"==typeof t,i={};s&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const e={};function r(s,i){return void 0===s[i.uuid]&&(s[i.uuid]=i.toJSON(t)),i.uuid}if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),!0===this.castShadow&&(e.castShadow=!0),!0===this.receiveShadow&&(e.receiveShadow=!0),!1===this.visible&&(e.visible=!1),!1===this.frustumCulled&&(e.frustumCulled=!1),0!==this.renderOrder&&(e.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(e.userData=this.userData),e.layers=this.layers.mask,e.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(e.matrixAutoUpdate=!1),this.isInstancedMesh&&(e.type="InstancedMesh",e.count=this.count,e.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(e.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?e.background=this.background.toJSON():this.background.isTexture&&(e.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(e.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){e.geometry=r(t.geometries,this.geometry);const s=this.geometry.parameters;if(void 0!==s&&void 0!==s.shapes){const i=s.shapes;if(Array.isArray(i))for(let s=0,e=i.length;s<e;s++){const e=i[s];r(t.shapes,e)}else r(t.shapes,i)}}if(this.isSkinnedMesh&&(e.bindMode=this.bindMode,e.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(t.skeletons,this.skeleton),e.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const s=[];for(let i=0,e=this.material.length;i<e;i++)s.push(r(t.materials,this.material[i]));e.material=s}else e.material=r(t.materials,this.material);if(this.children.length>0){e.children=[];for(let s=0;s<this.children.length;s++)e.children.push(this.children[s].toJSON(t).object)}if(this.animations.length>0){e.animations=[];for(let s=0;s<this.animations.length;s++){const i=this.animations[s];e.animations.push(r(t.animations,i))}}if(s){const s=n(t.geometries),e=n(t.materials),r=n(t.textures),o=n(t.images),h=n(t.shapes),a=n(t.skeletons),l=n(t.animations),c=n(t.nodes);s.length>0&&(i.geometries=s),e.length>0&&(i.materials=e),r.length>0&&(i.textures=r),o.length>0&&(i.images=o),h.length>0&&(i.shapes=h),a.length>0&&(i.skeletons=a),l.length>0&&(i.animations=l),c.length>0&&(i.nodes=c)}return i.object=e,i;function n(t){const s=[];for(const i in t){const e=t[i];delete e.metadata,s.push(e)}return s}}clone(t){return(new this.constructor).copy(this,t)}copy(t,s=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===s)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}q.DefaultUp=new n(0,1,0),q.DefaultMatrixAutoUpdate=!0;class I extends q{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new a,this.projectionMatrix=new a,this.projectionMatrixInverse=new a}copy(t,s){return super.copy(t,s),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const s=this.matrixWorld.elements;return t.set(-s[8],-s[9],-s[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,s){super.updateWorldMatrix(t,s),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class B{constructor(t=0,s=0,i=0,e=1){this.isVector4=!0,this.x=t,this.y=s,this.z=i,this.w=e}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,s,i,e){return this.x=t,this.y=s,this.z=i,this.w=e,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;case 2:this.z=s;break;case 3:this.w=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,s){return void 0!==s?this.addVectors(t,s):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this.z=t.z+s.z,this.w=t.w+s.w,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this.z+=t.z*s,this.w+=t.w*s,this}sub(t,s){return void 0!==s?this.subVectors(t,s):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this.z=t.z-s.z,this.w=t.w-s.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const s=this.x,i=this.y,e=this.z,r=this.w,n=t.elements;return this.x=n[0]*s+n[4]*i+n[8]*e+n[12]*r,this.y=n[1]*s+n[5]*i+n[9]*e+n[13]*r,this.z=n[2]*s+n[6]*i+n[10]*e+n[14]*r,this.w=n[3]*s+n[7]*i+n[11]*e+n[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const s=Math.sqrt(1-t.w*t.w);return s<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/s,this.y=t.y/s,this.z=t.z/s),this}setAxisAngleFromRotationMatrix(t){let s,i,e,r;const n=.01,o=.1,h=t.elements,a=h[0],l=h[4],c=h[8],u=h[1],d=h[5],y=h[9],p=h[2],m=h[6],x=h[10];if(Math.abs(l-u)<n&&Math.abs(c-p)<n&&Math.abs(y-m)<n){if(Math.abs(l+u)<o&&Math.abs(c+p)<o&&Math.abs(y+m)<o&&Math.abs(a+d+x-3)<o)return this.set(1,0,0,0),this;s=Math.PI;const t=(a+1)/2,h=(d+1)/2,g=(x+1)/2,f=(l+u)/4,v=(c+p)/4,M=(y+m)/4;return t>h&&t>g?t<n?(i=0,e=.707106781,r=.707106781):(i=Math.sqrt(t),e=f/i,r=v/i):h>g?h<n?(i=.707106781,e=0,r=.707106781):(e=Math.sqrt(h),i=f/e,r=M/e):g<n?(i=.707106781,e=.707106781,r=0):(r=Math.sqrt(g),i=v/r,e=M/r),this.set(i,e,r,s),this}let g=Math.sqrt((m-y)*(m-y)+(c-p)*(c-p)+(u-l)*(u-l));return Math.abs(g)<.001&&(g=1),this.x=(m-y)/g,this.y=(c-p)/g,this.z=(u-l)/g,this.w=Math.acos((a+d+x-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this.z=Math.max(t.z,Math.min(s.z,this.z)),this.w=Math.max(t.w,Math.min(s.w,this.w)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this.z=Math.max(t,Math.min(s,this.z)),this.w=Math.max(t,Math.min(s,this.w)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this.z+=(t.z-this.z)*s,this.w+=(t.w-this.w)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this.z=t.z+(s.z-t.z)*i,this.w=t.w+(s.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this.z=t[s+2],this.w=t[s+3],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t[s+2]=this.z,t[s+3]=this.w,t}fromBufferAttribute(t,s,i){return this.x=t.getX(s),this.y=t.getY(s),this.z=t.getZ(s),this.w=t.getW(s),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class L{constructor(t=0,s=0){this.isVector2=!0,this.x=t,this.y=s}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,s){return this.x=t,this.y=s,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,s){switch(t){case 0:this.x=s;break;case 1:this.y=s;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,s){return void 0!==s?this.addVectors(t,s):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}addScaledVector(t,s){return this.x+=t.x*s,this.y+=t.y*s,this}sub(t,s){return void 0!==s?this.subVectors(t,s):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const s=this.x,i=this.y,e=t.elements;return this.x=e[0]*s+e[3]*i+e[6],this.y=e[1]*s+e[4]*i+e[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,s){return this.x=Math.max(t.x,Math.min(s.x,this.x)),this.y=Math.max(t.y,Math.min(s.y,this.y)),this}clampScalar(t,s){return this.x=Math.max(t,Math.min(s,this.x)),this.y=Math.max(t,Math.min(s,this.y)),this}clampLength(t,s){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(s,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const s=this.x-t.x,i=this.y-t.y;return s*s+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,s){return this.x+=(t.x-this.x)*s,this.y+=(t.y-this.y)*s,this}lerpVectors(t,s,i){return this.x=t.x+(s.x-t.x)*i,this.y=t.y+(s.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,s=0){return this.x=t[s],this.y=t[s+1],this}toArray(t=[],s=0){return t[s]=this.x,t[s+1]=this.y,t}fromBufferAttribute(t,s,i){return this.x=t.getX(s),this.y=t.getY(s),this}rotateAround(t,s){const i=Math.cos(s),e=Math.sin(s),r=this.x-t.x,n=this.y-t.y;return this.x=r*i-n*e+t.x,this.y=r*e+n*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}const N="srgb",R="srgb-linear";function W(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function E(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const D={[N]:{[R]:W},[R]:{[N]:E}},Y={legacyMode:!0,get workingColorSpace(){return R},set workingColorSpace(t){},convert:function(t,s,i){if(this.legacyMode||s===i||!s||!i)return t;if(D[s]&&void 0!==D[s][i]){const e=D[s][i];return t.r=e(t.r),t.g=e(t.g),t.b=e(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,s){return this.convert(t,this.workingColorSpace,s)},toWorkingColorSpace:function(t,s){return this.convert(t,s,this.workingColorSpace)}},X={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},J={r:0,g:0,b:0},j={h:0,s:0,l:0},Z={h:0,s:0,l:0};function U(t,s,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(s-t)*i:i<.5?s:i<2/3?t+6*(s-t)*(2/3-i):t}function Q(t,s){return s.r=t.r,s.g=t.g,s.b=t.b,s}class H{constructor(t,s,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===s&&void 0===i?this.set(t):this.setRGB(t,s,i)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,s="srgb"){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,Y.toWorkingColorSpace(this,s),this}setRGB(t,s,i,e="srgb-linear"){return this.r=t,this.g=s,this.b=i,Y.toWorkingColorSpace(this,e),this}setHSL(t,s,e,r="srgb-linear"){var n;if(t=(t%(n=1)+n)%n,s=i(s,0,1),e=i(e,0,1),0===s)this.r=this.g=this.b=e;else{const i=e<=.5?e*(1+s):e+s-e*s,r=2*e-i;this.r=U(r,i,t+1/3),this.g=U(r,i,t),this.b=U(r,i,t-1/3)}return Y.toWorkingColorSpace(this,r),this}setStyle(t,s="srgb"){function i(t){void 0!==t&&parseFloat(t)}let e;if(e=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const r=e[1],n=e[2];switch(r){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,Y.toWorkingColorSpace(this,s),i(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,Y.toWorkingColorSpace(this,s),i(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(n)){const e=parseFloat(t[1])/360,r=parseInt(t[2],10)/100,n=parseInt(t[3],10)/100;return i(t[4]),this.setHSL(e,r,n,s)}}}else if(e=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=e[1],i=t.length;if(3===i)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,Y.toWorkingColorSpace(this,s),this;if(6===i)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,Y.toWorkingColorSpace(this,s),this}return t&&t.length>0?this.setColorName(t,s):this}setColorName(t,s="srgb"){const i=X[t.toLowerCase()];return void 0!==i&&this.setHex(i,s),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=W(t.r),this.g=W(t.g),this.b=W(t.b),this}copyLinearToSRGB(t){return this.r=E(t.r),this.g=E(t.g),this.b=E(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t="srgb"){return Y.fromWorkingColorSpace(Q(this,J),t),i(255*J.r,0,255)<<16^i(255*J.g,0,255)<<8^i(255*J.b,0,255)<<0}getHexString(t="srgb"){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,s="srgb-linear"){Y.fromWorkingColorSpace(Q(this,J),s);const i=J.r,e=J.g,r=J.b,n=Math.max(i,e,r),o=Math.min(i,e,r);let h,a;const l=(o+n)/2;if(o===n)h=0,a=0;else{const t=n-o;switch(a=l<=.5?t/(n+o):t/(2-n-o),n){case i:h=(e-r)/t+(e<r?6:0);break;case e:h=(r-i)/t+2;break;case r:h=(i-e)/t+4}h/=6}return t.h=h,t.s=a,t.l=l,t}getRGB(t,s="srgb-linear"){return Y.fromWorkingColorSpace(Q(this,J),s),t.r=J.r,t.g=J.g,t.b=J.b,t}getStyle(t="srgb"){return Y.fromWorkingColorSpace(Q(this,J),t),t!==N?`color(${t} ${J.r} ${J.g} ${J.b})`:`rgb(${255*J.r|0},${255*J.g|0},${255*J.b|0})`}offsetHSL(t,s,i){return this.getHSL(j),j.h+=t,j.s+=s,j.l+=i,this.setHSL(j.h,j.s,j.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,s){return this.r=t.r+s.r,this.g=t.g+s.g,this.b=t.b+s.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,s){return this.r+=(t.r-this.r)*s,this.g+=(t.g-this.g)*s,this.b+=(t.b-this.b)*s,this}lerpColors(t,s,i){return this.r=t.r+(s.r-t.r)*i,this.g=t.g+(s.g-t.g)*i,this.b=t.b+(s.b-t.b)*i,this}lerpHSL(t,s){this.getHSL(j),t.getHSL(Z);const i=e(j.h,Z.h,s),r=e(j.s,Z.s,s),n=e(j.l,Z.l,s);return this.setHSL(i,r,n),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,s=0){return this.r=t[s],this.g=t[s+1],this.b=t[s+2],this}toArray(t=[],s=0){return t[s]=this.r,t[s+1]=this.g,t[s+2]=this.b,t}fromBufferAttribute(t,s){return this.r=t.getX(s),this.g=t.getY(s),this.b=t.getZ(s),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}H.NAMES=X;const G=new n,$=new L;class K{constructor(t,s,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=s,this.count=void 0!==t?t.length/s:0,this.normalized=!0===i,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){!0===t&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,s,i){t*=this.itemSize,i*=s.itemSize;for(let e=0,r=this.itemSize;e<r;e++)this.array[t+e]=s.array[i+e];return this}copyArray(t){return this.array.set(t),this}copyColorsArray(t){const s=this.array;let i=0;for(let e=0,r=t.length;e<r;e++){let r=t[e];void 0===r&&(r=new H),s[i++]=r.r,s[i++]=r.g,s[i++]=r.b}return this}copyVector2sArray(t){const s=this.array;let i=0;for(let e=0,r=t.length;e<r;e++){let r=t[e];void 0===r&&(r=new L),s[i++]=r.x,s[i++]=r.y}return this}copyVector3sArray(t){const s=this.array;let i=0;for(let e=0,r=t.length;e<r;e++){let r=t[e];void 0===r&&(r=new n),s[i++]=r.x,s[i++]=r.y,s[i++]=r.z}return this}copyVector4sArray(t){const s=this.array;let i=0;for(let e=0,r=t.length;e<r;e++){let r=t[e];void 0===r&&(r=new B),s[i++]=r.x,s[i++]=r.y,s[i++]=r.z,s[i++]=r.w}return this}applyMatrix3(t){if(2===this.itemSize)for(let s=0,i=this.count;s<i;s++)$.fromBufferAttribute(this,s),$.applyMatrix3(t),this.setXY(s,$.x,$.y);else if(3===this.itemSize)for(let s=0,i=this.count;s<i;s++)G.fromBufferAttribute(this,s),G.applyMatrix3(t),this.setXYZ(s,G.x,G.y,G.z);return this}applyMatrix4(t){for(let s=0,i=this.count;s<i;s++)G.fromBufferAttribute(this,s),G.applyMatrix4(t),this.setXYZ(s,G.x,G.y,G.z);return this}applyNormalMatrix(t){for(let s=0,i=this.count;s<i;s++)G.fromBufferAttribute(this,s),G.applyNormalMatrix(t),this.setXYZ(s,G.x,G.y,G.z);return this}transformDirection(t){for(let s=0,i=this.count;s<i;s++)G.fromBufferAttribute(this,s),G.transformDirection(t),this.setXYZ(s,G.x,G.y,G.z);return this}set(t,s=0){return this.array.set(t,s),this}getX(t){return this.array[t*this.itemSize]}setX(t,s){return this.array[t*this.itemSize]=s,this}getY(t){return this.array[t*this.itemSize+1]}setY(t,s){return this.array[t*this.itemSize+1]=s,this}getZ(t){return this.array[t*this.itemSize+2]}setZ(t,s){return this.array[t*this.itemSize+2]=s,this}getW(t){return this.array[t*this.itemSize+3]}setW(t,s){return this.array[t*this.itemSize+3]=s,this}setXY(t,s,i){return t*=this.itemSize,this.array[t+0]=s,this.array[t+1]=i,this}setXYZ(t,s,i,e){return t*=this.itemSize,this.array[t+0]=s,this.array[t+1]=i,this.array[t+2]=e,this}setXYZW(t,s,i,e,r){return t*=this.itemSize,this.array[t+0]=s,this.array[t+1]=i,this.array[t+2]=e,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(t.name=this.name),35044!==this.usage&&(t.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(t.updateRange=this.updateRange),t}}class tt{constructor(t=new n(Infinity,Infinity,Infinity),s=new n(-Infinity,-Infinity,-Infinity)){this.isBox3=!0,this.min=t,this.max=s}set(t,s){return this.min.copy(t),this.max.copy(s),this}setFromArray(t){let s=Infinity,i=Infinity,e=Infinity,r=-Infinity,n=-Infinity,o=-Infinity;for(let h=0,a=t.length;h<a;h+=3){const a=t[h],l=t[h+1],c=t[h+2];a<s&&(s=a),l<i&&(i=l),c<e&&(e=c),a>r&&(r=a),l>n&&(n=l),c>o&&(o=c)}return this.min.set(s,i,e),this.max.set(r,n,o),this}setFromBufferAttribute(t){let s=Infinity,i=Infinity,e=Infinity,r=-Infinity,n=-Infinity,o=-Infinity;for(let h=0,a=t.count;h<a;h++){const a=t.getX(h),l=t.getY(h),c=t.getZ(h);a<s&&(s=a),l<i&&(i=l),c<e&&(e=c),a>r&&(r=a),l>n&&(n=l),c>o&&(o=c)}return this.min.set(s,i,e),this.max.set(r,n,o),this}setFromPoints(t){this.makeEmpty();for(let s=0,i=t.length;s<i;s++)this.expandByPoint(t[s]);return this}setFromCenterAndSize(t,s){const i=it.copy(s).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,s=!1){return this.makeEmpty(),this.expandByObject(t,s)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,s=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(void 0!==i)if(s&&null!=i.attributes&&void 0!==i.attributes.position){const s=i.attributes.position;for(let i=0,e=s.count;i<e;i++)it.fromBufferAttribute(s,i).applyMatrix4(t.matrixWorld),this.expandByPoint(it)}else null===i.boundingBox&&i.computeBoundingBox(),et.copy(i.boundingBox),et.applyMatrix4(t.matrixWorld),this.union(et);const e=t.children;for(let r=0,n=e.length;r<n;r++)this.expandByObject(e[r],s);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,s){return s.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,it),it.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let s,i;return t.normal.x>0?(s=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(s=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(s+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(s+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(s+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(s+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),s<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ct),ut.subVectors(this.max,ct),rt.subVectors(t.a,ct),nt.subVectors(t.b,ct),ot.subVectors(t.c,ct),ht.subVectors(nt,rt),at.subVectors(ot,nt),lt.subVectors(rt,ot);let s=[0,-ht.z,ht.y,0,-at.z,at.y,0,-lt.z,lt.y,ht.z,0,-ht.x,at.z,0,-at.x,lt.z,0,-lt.x,-ht.y,ht.x,0,-at.y,at.x,0,-lt.y,lt.x,0];return!!pt(s,rt,nt,ot,ut)&&(s=[1,0,0,0,1,0,0,0,1],!!pt(s,rt,nt,ot,ut)&&(dt.crossVectors(ht,at),s=[dt.x,dt.y,dt.z],pt(s,rt,nt,ot,ut)))}clampPoint(t,s){return s.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return it.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(it).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(st[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),st[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),st[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),st[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),st[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),st[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),st[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),st[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(st)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const st=[new n,new n,new n,new n,new n,new n,new n,new n],it=new n,et=new tt,rt=new n,nt=new n,ot=new n,ht=new n,at=new n,lt=new n,ct=new n,ut=new n,dt=new n,yt=new n;function pt(t,s,i,e,r){for(let n=0,o=t.length-3;n<=o;n+=3){yt.fromArray(t,n);const o=r.x*Math.abs(yt.x)+r.y*Math.abs(yt.y)+r.z*Math.abs(yt.z),h=s.dot(yt),a=i.dot(yt),l=e.dot(yt);if(Math.max(-Math.max(h,a,l),Math.min(h,a,l))>o)return!1}return!0}const mt=new n,xt=new n;class gt{constructor(t=new n,s=new n){this.start=t,this.end=s}set(t,s){return this.start.copy(t),this.end.copy(s),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,s){return this.delta(s).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,s){mt.subVectors(t,this.start),xt.subVectors(this.end,this.start);const e=xt.dot(xt);let r=xt.dot(mt)/e;return s&&(r=i(r,0,1)),r}closestPointToPoint(t,s,i){const e=this.closestPointToPointParameter(t,s);return this.delta(i).multiplyScalar(e).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const ft=new tt,vt=new n,Mt=new n,wt=new n;class zt{constructor(t=new n,s=-1){this.center=t,this.radius=s}set(t,s){return this.center.copy(t),this.radius=s,this}setFromPoints(t,s){const i=this.center;void 0!==s?i.copy(s):ft.setFromPoints(t).getCenter(i);let e=0;for(let r=0,n=t.length;r<n;r++)e=Math.max(e,i.distanceToSquared(t[r]));return this.radius=Math.sqrt(e),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const s=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=s*s}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,s){const i=this.center.distanceToSquared(t);return s.copy(t),i>this.radius*this.radius&&(s.sub(this.center).normalize(),s.multiplyScalar(this.radius).add(this.center)),s}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){wt.subVectors(t,this.center);const s=wt.lengthSq();if(s>this.radius*this.radius){const t=Math.sqrt(s),i=.5*(t-this.radius);this.center.add(wt.multiplyScalar(i/t)),this.radius+=i}return this}union(t){return!0===this.center.equals(t.center)?Mt.set(0,0,1).multiplyScalar(t.radius):Mt.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(vt.copy(t.center).add(Mt)),this.expandByPoint(vt.copy(t.center).sub(Mt)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const bt=new n,St=new n,_t=new n,Ct=new n,Pt=new n,At=new n,kt=new n,Tt=new n,Ot=new n,Ft=new n;class Vt{constructor(t=new n,s=new n,i=new n){this.a=t,this.b=s,this.c=i}static getNormal(t,s,i,e){e.subVectors(i,s),bt.subVectors(t,s),e.cross(bt);const r=e.lengthSq();return r>0?e.multiplyScalar(1/Math.sqrt(r)):e.set(0,0,0)}static getBarycoord(t,s,i,e,r){bt.subVectors(e,s),St.subVectors(i,s),_t.subVectors(t,s);const n=bt.dot(bt),o=bt.dot(St),h=bt.dot(_t),a=St.dot(St),l=St.dot(_t),c=n*a-o*o;if(0===c)return r.set(-2,-1,-1);const u=1/c,d=(a*h-o*l)*u,y=(n*l-o*h)*u;return r.set(1-d-y,y,d)}static containsPoint(t,s,i,e){return this.getBarycoord(t,s,i,e,Ct),Ct.x>=0&&Ct.y>=0&&Ct.x+Ct.y<=1}static getUV(t,s,i,e,r,n,o,h){return this.getBarycoord(t,s,i,e,Ct),h.set(0,0),h.addScaledVector(r,Ct.x),h.addScaledVector(n,Ct.y),h.addScaledVector(o,Ct.z),h}static isFrontFacing(t,s,i,e){return bt.subVectors(i,s),St.subVectors(t,s),bt.cross(St).dot(e)<0}set(t,s,i){return this.a.copy(t),this.b.copy(s),this.c.copy(i),this}setFromPointsAndIndices(t,s,i,e){return this.a.copy(t[s]),this.b.copy(t[i]),this.c.copy(t[e]),this}setFromAttributeAndIndices(t,s,i,e){return this.a.fromBufferAttribute(t,s),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return bt.subVectors(this.c,this.b),St.subVectors(this.a,this.b),.5*bt.cross(St).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Vt.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,s){return Vt.getBarycoord(t,this.a,this.b,this.c,s)}getUV(t,s,i,e,r){return Vt.getUV(t,this.a,this.b,this.c,s,i,e,r)}containsPoint(t){return Vt.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Vt.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,s){const i=this.a,e=this.b,r=this.c;let n,o;Pt.subVectors(e,i),At.subVectors(r,i),Tt.subVectors(t,i);const h=Pt.dot(Tt),a=At.dot(Tt);if(h<=0&&a<=0)return s.copy(i);Ot.subVectors(t,e);const l=Pt.dot(Ot),c=At.dot(Ot);if(l>=0&&c<=l)return s.copy(e);const u=h*c-l*a;if(u<=0&&h>=0&&l<=0)return n=h/(h-l),s.copy(i).addScaledVector(Pt,n);Ft.subVectors(t,r);const d=Pt.dot(Ft),y=At.dot(Ft);if(y>=0&&d<=y)return s.copy(r);const p=d*a-h*y;if(p<=0&&a>=0&&y<=0)return o=a/(a-y),s.copy(i).addScaledVector(At,o);const m=l*y-d*c;if(m<=0&&c-l>=0&&d-y>=0)return kt.subVectors(r,e),o=(c-l)/(c-l+(d-y)),s.copy(e).addScaledVector(kt,o);const x=1/(m+p+u);return n=p*x,o=u*x,s.copy(i).addScaledVector(Pt,n).addScaledVector(At,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const qt=new n,It=new n,Bt=new M;const Lt=new n,Nt=new n,Rt=new n,Wt=new n,Et=new n,Dt=new n,Yt=new n;class Xt{constructor(t=new n,s=new n(0,0,-1)){this.origin=t,this.direction=s}set(t,s){return this.origin.copy(t),this.direction.copy(s),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,s){return s.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Lt)),this}closestPointToPoint(t,s){s.subVectors(t,this.origin);const i=s.dot(this.direction);return i<0?s.copy(this.origin):s.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const s=Lt.subVectors(t,this.origin).dot(this.direction);return s<0?this.origin.distanceToSquared(t):(Lt.copy(this.direction).multiplyScalar(s).add(this.origin),Lt.distanceToSquared(t))}distanceSqToSegment(t,s,i,e){Nt.copy(t).add(s).multiplyScalar(.5),Rt.copy(s).sub(t).normalize(),Wt.copy(this.origin).sub(Nt);const r=.5*t.distanceTo(s),n=-this.direction.dot(Rt),o=Wt.dot(this.direction),h=-Wt.dot(Rt),a=Wt.lengthSq(),l=Math.abs(1-n*n);let c,u,d,y;if(l>0)if(c=n*h-o,u=n*o-h,y=r*l,c>=0)if(u>=-y)if(u<=y){const t=1/l;c*=t,u*=t,d=c*(c+n*u+2*o)+u*(n*c+u+2*h)+a}else u=r,c=Math.max(0,-(n*u+o)),d=-c*c+u*(u+2*h)+a;else u=-r,c=Math.max(0,-(n*u+o)),d=-c*c+u*(u+2*h)+a;else u<=-y?(c=Math.max(0,-(-n*r+o)),u=c>0?-r:Math.min(Math.max(-r,-h),r),d=-c*c+u*(u+2*h)+a):u<=y?(c=0,u=Math.min(Math.max(-r,-h),r),d=u*(u+2*h)+a):(c=Math.max(0,-(n*r+o)),u=c>0?r:Math.min(Math.max(-r,-h),r),d=-c*c+u*(u+2*h)+a);else u=n>0?-r:r,c=Math.max(0,-(n*u+o)),d=-c*c+u*(u+2*h)+a;return i&&i.copy(this.direction).multiplyScalar(c).add(this.origin),e&&e.copy(Rt).multiplyScalar(u).add(Nt),d}intersectSphere(t,s){Lt.subVectors(t.center,this.origin);const i=Lt.dot(this.direction),e=Lt.dot(Lt)-i*i,r=t.radius*t.radius;if(e>r)return null;const n=Math.sqrt(r-e),o=i-n,h=i+n;return o<0&&h<0?null:o<0?this.at(h,s):this.at(o,s)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const s=t.normal.dot(this.direction);if(0===s)return 0===t.distanceToPoint(this.origin)?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/s;return i>=0?i:null}intersectPlane(t,s){const i=this.distanceToPlane(t);return null===i?null:this.at(i,s)}intersectsPlane(t){const s=t.distanceToPoint(this.origin);if(0===s)return!0;return t.normal.dot(this.direction)*s<0}intersectBox(t,s){let i,e,r,n,o,h;const a=1/this.direction.x,l=1/this.direction.y,c=1/this.direction.z,u=this.origin;return a>=0?(i=(t.min.x-u.x)*a,e=(t.max.x-u.x)*a):(i=(t.max.x-u.x)*a,e=(t.min.x-u.x)*a),l>=0?(r=(t.min.y-u.y)*l,n=(t.max.y-u.y)*l):(r=(t.max.y-u.y)*l,n=(t.min.y-u.y)*l),i>n||r>e?null:((r>i||i!=i)&&(i=r),(n<e||e!=e)&&(e=n),c>=0?(o=(t.min.z-u.z)*c,h=(t.max.z-u.z)*c):(o=(t.max.z-u.z)*c,h=(t.min.z-u.z)*c),i>h||o>e?null:((o>i||i!=i)&&(i=o),(h<e||e!=e)&&(e=h),e<0?null:this.at(i>=0?i:e,s)))}intersectsBox(t){return null!==this.intersectBox(t,Lt)}intersectTriangle(t,s,i,e,r){Et.subVectors(s,t),Dt.subVectors(i,t),Yt.crossVectors(Et,Dt);let n,o=this.direction.dot(Yt);if(o>0){if(e)return null;n=1}else{if(!(o<0))return null;n=-1,o=-o}Wt.subVectors(this.origin,t);const h=n*this.direction.dot(Dt.crossVectors(Wt,Dt));if(h<0)return null;const a=n*this.direction.dot(Et.cross(Wt));if(a<0)return null;if(h+a>o)return null;const l=-n*Wt.dot(Yt);return l<0?null:this.at(l/o,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Jt{constructor(t,s,i=0,e=Infinity){this.ray=new Xt(t,s),this.near=i,this.far=e,this.camera=null,this.layers=new v,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,s){this.ray.set(t,s)}setFromCamera(t,s){s.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(s.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(s).sub(this.ray.origin).normalize(),this.camera=s):s.isOrthographicCamera&&(this.ray.origin.set(t.x,t.y,(s.near+s.far)/(s.near-s.far)).unproject(s),this.ray.direction.set(0,0,-1).transformDirection(s.matrixWorld),this.camera=s)}intersectObject(t,s=!0,i=[]){return Zt(t,this,i,s),i.sort(jt),i}intersectObjects(t,s=!0,i=[]){for(let e=0,r=t.length;e<r;e++)Zt(t[e],this,i,s);return i.sort(jt),i}}function jt(t,s){return t.distance-s.distance}function Zt(t,s,i,e){if(t.layers.test(s.layers)&&t.raycast(s,i),!0===e){const e=t.children;for(let t=0,r=e.length;t<r;t++)Zt(e[t],s,i,!0)}}class Ut{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return null}getPointAt(t,s){const i=this.getUtoTmapping(t);return this.getPoint(i,s)}getPoints(t=5){const s=[];for(let i=0;i<=t;i++)s.push(this.getPoint(i/t));return s}getSpacedPoints(t=5){const s=[];for(let i=0;i<=t;i++)s.push(this.getPointAt(i/t));return s}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const s=[];let i,e=this.getPoint(0),r=0;s.push(0);for(let n=1;n<=t;n++)i=this.getPoint(n/t),r+=i.distanceTo(e),s.push(r),e=i;return this.cacheArcLengths=s,s}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,s){const i=this.getLengths();let e=0;const r=i.length;let n;n=s||t*i[r-1];let o,h=0,a=r-1;for(;h<=a;)if(e=Math.floor(h+(a-h)/2),o=i[e]-n,o<0)h=e+1;else{if(!(o>0)){a=e;break}a=e-1}if(e=a,i[e]===n)return e/(r-1);const l=i[e];return(e+(n-l)/(i[e+1]-l))/(r-1)}getTangent(t,s){const i=1e-4;let e=t-i,r=t+i;e<0&&(e=0),r>1&&(r=1);const o=this.getPoint(e),h=this.getPoint(r),a=s||(o.isVector2?new L:new n);return a.copy(h).sub(o).normalize(),a}getTangentAt(t,s){const i=this.getUtoTmapping(t);return this.getTangent(i,s)}computeFrenetFrames(t,s){const e=new n,r=[],o=[],h=[],l=new n,c=new a;for(let i=0;i<=t;i++){const s=i/t;r[i]=this.getTangentAt(s,new n)}o[0]=new n,h[0]=new n;let u=Number.MAX_VALUE;const d=Math.abs(r[0].x),y=Math.abs(r[0].y),p=Math.abs(r[0].z);d<=u&&(u=d,e.set(1,0,0)),y<=u&&(u=y,e.set(0,1,0)),p<=u&&e.set(0,0,1),l.crossVectors(r[0],e).normalize(),o[0].crossVectors(r[0],l),h[0].crossVectors(r[0],o[0]);for(let n=1;n<=t;n++){if(o[n]=o[n-1].clone(),h[n]=h[n-1].clone(),l.crossVectors(r[n-1],r[n]),l.length()>Number.EPSILON){l.normalize();const t=Math.acos(i(r[n-1].dot(r[n]),-1,1));o[n].applyMatrix4(c.makeRotationAxis(l,t))}h[n].crossVectors(r[n],o[n])}if(!0===s){let s=Math.acos(i(o[0].dot(o[t]),-1,1));s/=t,r[0].dot(l.crossVectors(o[0],o[t]))>0&&(s=-s);for(let i=1;i<=t;i++)o[i].applyMatrix4(c.makeRotationAxis(r[i],s*i)),h[i].crossVectors(r[i],o[i])}return{tangents:r,normals:o,binormals:h}}clone(){return(new this.constructor).copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Qt extends Ut{constructor(t=0,s=0,i=1,e=1,r=0,n=2*Math.PI,o=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=s,this.xRadius=i,this.yRadius=e,this.aStartAngle=r,this.aEndAngle=n,this.aClockwise=o,this.aRotation=h}getPoint(t,s){const i=s||new L,e=2*Math.PI;let r=this.aEndAngle-this.aStartAngle;const n=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=e;for(;r>e;)r-=e;r<Number.EPSILON&&(r=n?0:e),!0!==this.aClockwise||n||(r===e?r=-e:r-=e);const o=this.aStartAngle+t*r;let h=this.aX+this.xRadius*Math.cos(o),a=this.aY+this.yRadius*Math.sin(o);if(0!==this.aRotation){const t=Math.cos(this.aRotation),s=Math.sin(this.aRotation),i=h-this.aX,e=a-this.aY;h=i*t-e*s+this.aX,a=i*s+e*t+this.aY}return i.set(h,a)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}function Ht(){let t=0,s=0,i=0,e=0;function r(r,n,o,h){t=r,s=o,i=-3*r+3*n-2*o-h,e=2*r-2*n+o+h}return{initCatmullRom:function(t,s,i,e,n){r(s,i,n*(i-t),n*(e-s))},initNonuniformCatmullRom:function(t,s,i,e,n,o,h){let a=(s-t)/n-(i-t)/(n+o)+(i-s)/o,l=(i-s)/o-(e-s)/(o+h)+(e-i)/h;a*=o,l*=o,r(s,i,a,l)},calc:function(r){const n=r*r;return t+s*r+i*n+e*(n*r)}}}const Gt=new n,$t=new Ht,Kt=new Ht,ts=new Ht;function ss(t,s,i,e,r){const n=.5*(e-s),o=.5*(r-i),h=t*t;return(2*i-2*e+n+o)*(t*h)+(-3*i+3*e-2*n-o)*h+n*t+i}function is(t,s,i,e){return function(t,s){const i=1-t;return i*i*s}(t,s)+function(t,s){return 2*(1-t)*t*s}(t,i)+function(t,s){return t*t*s}(t,e)}function es(t,s,i,e,r){return function(t,s){const i=1-t;return i*i*i*s}(t,s)+function(t,s){const i=1-t;return 3*i*i*t*s}(t,i)+function(t,s){return 3*(1-t)*t*t*s}(t,e)+function(t,s){return t*t*t*s}(t,r)}class rs extends Ut{constructor(t=new n,s=new n,i=new n,e=new n){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=s,this.v2=i,this.v3=e}getPoint(t,s=new n){const i=s,e=this.v0,r=this.v1,o=this.v2,h=this.v3;return i.set(es(t,e.x,r.x,o.x,h.x),es(t,e.y,r.y,o.y,h.y),es(t,e.z,r.z,o.z,h.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class ns extends Ut{constructor(t=new L,s=new L){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=s}getPoint(t,s=new L){const i=s;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,s){return this.getPoint(t,s)}getTangent(t,s){const i=s||new L;return i.copy(this.v2).sub(this.v1).normalize(),i}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}var os=Object.freeze({__proto__:null,ArcCurve:class extends Qt{constructor(t,s,i,e,r,n){super(t,s,i,i,e,r,n),this.isArcCurve=!0,this.type="ArcCurve"}},CatmullRomCurve3:class extends Ut{constructor(t=[],s=!1,i="centripetal",e=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=s,this.curveType=i,this.tension=e}getPoint(t,s=new n){const i=s,e=this.points,r=e.length,o=(r-(this.closed?0:1))*t;let h,a,l=Math.floor(o),c=o-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:0===c&&l===r-1&&(l=r-2,c=1),this.closed||l>0?h=e[(l-1)%r]:(Gt.subVectors(e[0],e[1]).add(e[0]),h=Gt);const u=e[l%r],d=e[(l+1)%r];if(this.closed||l+2<r?a=e[(l+2)%r]:(Gt.subVectors(e[r-1],e[r-2]).add(e[r-1]),a=Gt),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let s=Math.pow(h.distanceToSquared(u),t),i=Math.pow(u.distanceToSquared(d),t),e=Math.pow(d.distanceToSquared(a),t);i<1e-4&&(i=1),s<1e-4&&(s=i),e<1e-4&&(e=i),$t.initNonuniformCatmullRom(h.x,u.x,d.x,a.x,s,i,e),Kt.initNonuniformCatmullRom(h.y,u.y,d.y,a.y,s,i,e),ts.initNonuniformCatmullRom(h.z,u.z,d.z,a.z,s,i,e)}else"catmullrom"===this.curveType&&($t.initCatmullRom(h.x,u.x,d.x,a.x,this.tension),Kt.initCatmullRom(h.y,u.y,d.y,a.y,this.tension),ts.initCatmullRom(h.z,u.z,d.z,a.z,this.tension));return i.set($t.calc(c),Kt.calc(c),ts.calc(c)),i}copy(t){super.copy(t),this.points=[];for(let s=0,i=t.points.length;s<i;s++){const i=t.points[s];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let s=0,i=this.points.length;s<i;s++){const i=this.points[s];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let s=0,i=t.points.length;s<i;s++){const i=t.points[s];this.points.push((new n).fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}},CubicBezierCurve:class extends Ut{constructor(t=new L,s=new L,i=new L,e=new L){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=s,this.v2=i,this.v3=e}getPoint(t,s=new L){const i=s,e=this.v0,r=this.v1,n=this.v2,o=this.v3;return i.set(es(t,e.x,r.x,n.x,o.x),es(t,e.y,r.y,n.y,o.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}},CubicBezierCurve3:rs,EllipseCurve:Qt,LineCurve:ns,LineCurve3:class extends Ut{constructor(t=new n,s=new n){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=s}getPoint(t,s=new n){const i=s;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,s){return this.getPoint(t,s)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve:class extends Ut{constructor(t=new L,s=new L,i=new L){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=s,this.v2=i}getPoint(t,s=new L){const i=s,e=this.v0,r=this.v1,n=this.v2;return i.set(is(t,e.x,r.x,n.x),is(t,e.y,r.y,n.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},QuadraticBezierCurve3:class extends Ut{constructor(t=new n,s=new n,i=new n){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=s,this.v2=i}getPoint(t,s=new n){const i=s,e=this.v0,r=this.v1,o=this.v2;return i.set(is(t,e.x,r.x,o.x),is(t,e.y,r.y,o.y),is(t,e.z,r.z,o.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},SplineCurve:class extends Ut{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,s=new L){const i=s,e=this.points,r=(e.length-1)*t,n=Math.floor(r),o=r-n,h=e[0===n?n:n-1],a=e[n],l=e[n>e.length-2?e.length-1:n+1],c=e[n>e.length-3?e.length-1:n+2];return i.set(ss(o,h.x,a.x,l.x,c.x),ss(o,h.y,a.y,l.y,c.y)),i}copy(t){super.copy(t),this.points=[];for(let s=0,i=t.points.length;s<i;s++){const i=t.points[s];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let s=0,i=this.points.length;s<i;s++){const i=this.points[s];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let s=0,i=t.points.length;s<i;s++){const i=t.points[s];this.points.push((new L).fromArray(i))}return this}}});class hs extends Ut{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),s=this.curves[this.curves.length-1].getPoint(1);t.equals(s)||this.curves.push(new ns(s,t))}getPoint(t,s){const i=t*this.getLength(),e=this.getCurveLengths();let r=0;for(;r<e.length;){if(e[r]>=i){const t=e[r]-i,n=this.curves[r],o=n.getLength(),h=0===o?0:1-t/o;return n.getPointAt(h,s)}r++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let s=0;for(let i=0,e=this.curves.length;i<e;i++)s+=this.curves[i].getLength(),t.push(s);return this.cacheLengths=t,t}getSpacedPoints(t=40){const s=[];for(let i=0;i<=t;i++)s.push(this.getPoint(i/t));return this.autoClose&&s.push(s[0]),s}getPoints(t=12){const s=[];let i;for(let e=0,r=this.curves;e<r.length;e++){const n=r[e],o=n.isEllipseCurve?2*t:n.isLineCurve||n.isLineCurve3?1:n.isSplineCurve?t*n.points.length:t,h=n.getPoints(o);for(let t=0;t<h.length;t++){const e=h[t];i&&i.equals(e)||(s.push(e),i=e)}}return this.autoClose&&s.length>1&&!s[s.length-1].equals(s[0])&&s.push(s[0]),s}copy(t){super.copy(t),this.curves=[];for(let s=0,i=t.curves.length;s<i;s++){const i=t.curves[s];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let s=0,i=this.curves.length;s<i;s++){const i=this.curves[s];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let s=0,i=t.curves.length;s<i;s++){const i=t.curves[s];this.curves.push((new os[i.type]).fromJSON(i))}return this}}const as={NONE:0,FREE:1,STICKY:2,FOLLOW_CURVE:3},ls=new n,cs=new n,us=new class{constructor(t=new n(1,0,0),s=0){this.isPlane=!0,this.normal=t,this.constant=s}set(t,s){return this.normal.copy(t),this.constant=s,this}setComponents(t,s,i,e){return this.normal.set(t,s,i),this.constant=e,this}setFromNormalAndCoplanarPoint(t,s){return this.normal.copy(t),this.constant=-s.dot(this.normal),this}setFromCoplanarPoints(t,s,i){const e=qt.subVectors(i,s).cross(It.subVectors(t,s)).normalize();return this.setFromNormalAndCoplanarPoint(e,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,s){return s.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,s){const i=t.delta(qt),e=this.normal.dot(i);if(0===e)return 0===this.distanceToPoint(t.start)?s.copy(t.start):null;const r=-(t.start.dot(this.normal)+this.constant)/e;return r<0||r>1?null:s.copy(i).multiplyScalar(r).add(t.start)}intersectsLine(t){const s=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return s<0&&i>0||i<0&&s>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,s){const i=s||Bt.getNormalMatrix(t),e=this.coplanarPoint(qt).applyMatrix4(t),r=this.normal.applyMatrix3(i).normalize();return this.constant=-e.dot(r),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return(new this.constructor).copy(this)}},ds=new gt,ys=new zt,ps=new Jt;const ms=new n(0,1,0),xs=new n,gs=new n,fs=new a,vs=new f,Ms=new r,ws=new Jt;class zs extends zt{constructor(t){super(new n(0,0,0),t),Object.assign(this,{previousPosition:new n,absoluteMove:!0,mass:1,speed:1,drift:!1,driftFactor:.005,bounce:!1,forceLerp:!1,force:new n,forceTarget:new n,forceInput:new n,lastForce:new n,stearingSpeed:1,reverseBackwardStearing:!1,velocity:new n,appliedVelocity:0,rotation:new f(0,0,0,"YXZ"),rotationTarget:new f(0,0,0,"YXZ"),alignOnNormal:!1,isOnFloor:!1,distanceFromFloor:0,wasOnFloor:!1,moveToFloor:!1,teleportIfOutOfBounds:!1,collidingLayers:new Set,laps:1,currentLap:1,progress:0,previousProgress:0,validatedProgress:0,furthestProgress:0,completeProgress:!1,nextChekpoint:.1,isReverse:!1})}get data(){return{position:{x:this.position.x,y:this.position.y,z:this.position.z},rotation:{x:this.rotation.x,y:this.rotation.y,z:this.rotation.z},force:{x:this.force.x,y:this.force.y,z:this.force.z},distanceFromFloor:this.distanceFromFloor,velocity:0===this.speed?0:this.appliedVelocity/this.speed,speed:this.speed,collidingLayers:this.collidingLayers,progress:{reverse:this.isReverse,current:this.progress,validated:this.validatedProgress,furthest:this.furthestProgress,complete:this.completeProgress},still:this.appliedVelocity<1e-4}}get position(){return this.center}set absoluteMove(t){this._absoluteMove=t,this.updateControls=this._absoluteMove?this.absoluteUpdateControls:this.relativeUpdateControls}get absoluteMove(){return this._absoluteMove}move(t,s,i){this.forceInput.setX(t),this.forceInput.setZ(i),this.forceInput.length()>0&&this.lastForce.copy(this.forceInput),this.isOnFloor&&s&&(this.velocity.y=15,this.forceInput.setY(0))}updateVelocity(t,s){let i=Math.exp(-4*s)-1;this.isOnFloor||(this.velocity.y-=t*s),this.velocity.addScaledVector(this.velocity,i),xs.copy(this.velocity).multiplyScalar(s),this.translate(xs)}updateCollisions(t,s){const i=t.sphereIntersect(this,xs.set(0,1,0),.25*Math.PI),{hits:e,orientation:r,isOnFloor:n,distanceFromFloor:o,layers:h}=i;this.distanceFromFloor=o,this.collidingLayers=h,this.wasOnFloor=this.isOnFloor,this.isOnFloor=n;for(const a of e)"ground"!==a.layerID&&(this.force.z*=.98),xs.copy(a.normal),this.isOnFloor||this.velocity.addScaledVector(xs,-xs.dot(this.velocity)),a.angle>.45*Math.PI&&xs.setY(0),xs.multiplyScalar(a.depth),this.translate(xs);if(this.alignOnNormal&&n){const t=r.applyAxisAngle(xs.set(0,1,0),Math.PI/2);xs.setFromEuler(this.rotationTarget).lerp(t,20*s),this.rotationTarget.x=xs.x,this.rotationTarget.z=xs.z}}updateRotation(){xs.setFromEuler(this.rotationTarget),gs.setFromEuler(this.rotation).lerp(xs,this.drift?this.driftFactor:1),this.rotation.setFromVector3(gs)}updateCurveProgress(t){if(t&&t.progress){this.progress=t.progress.getClosestProgress(this.position),this.isReverse=this.progress<this.previousProgress,this.progress>=this.nextChekpoint-.1&&this.progress<=this.nextChekpoint?(this.validatedProgress=this.progress,this.validatedProgress>this.furthestProgress&&(this.furthestProgress=this.validatedProgress)):this.progress>=this.nextChekpoint&&this.progress<this.nextChekpoint+.1&&(this.nextChekpoint=Math.min(1,this.nextChekpoint+.1));const s=~~(10*this.progress)/10,i=this.furthestProgress>=.99&&0===s;this.completeProgress=1==this.validatedProgress||i,this.previousProgress=this.progress,this.completeProgress&&this.currentLap<this.laps&&(this.currentLap++,this.progress=0,this.validatedProgress=0,this.furthestProgress=0,this.previousProgress=0,this.completeProgress=!1,this.nextChekpoint=.1)}}absoluteUpdateControls(t){this.force.z=this.forceTarget.z,this.force.x=this.forceTarget.x;const s=xs.copy(t.getWorldDirection(gs)).normalize().multiplyScalar(-this.force.z).add(t.getWorldDirection(gs).normalize().cross(t.up).multiplyScalar(this.force.x));this.force.copy(s),this.force.y=0;let i=Math.PI+Math.atan2(this.lastForce.x,this.lastForce.z)+Math.atan2(t.worldPosition.x-this.position.x,t.worldPosition.z-this.position.z);Math.abs(i-this.rotation.y)>Math.PI&&(i-=2*Math.PI),this.rotationTarget.y=i,this.rotation.y=i,gs.copy(this.force).multiplyScalar(this.speed),this.velocity.setX(gs.x).setZ(gs.z)}relativeUpdateControls(t,s,i,e){e&&this.updateCurveProgress(s),this.force.z+=(this.forceTarget.z-this.force.z)/this.mass*(1e3*i),this.force.x=this.forceTarget.x;const r=this.reverseBackwardStearing?this.force.z<=.01?1:-1:1,n=this.rotationTarget.y+-this.force.x*r*(this.stearingSpeed*i*Math.PI*2),o=this.rotationTarget.y+(n-this.rotationTarget.y);this.rotationTarget.y=o,xs.set(0,0,this.force.z).applyEuler(this.rotation).multiplyScalar(this.speed),this.velocity.setX(xs.x).setZ(xs.z)}update(t,s,i,e,r,n){if(!t.boundingBox.containsPoint(this.position)&&this.teleportIfOutOfBounds&&this.respawn(),this.moveToFloor){this.moveToFloor=!1,ws.set(this.position,xs.set(0,-1,0));const s=t.rayIntersect(ws.ray);s&&this.position.copy(s.position)}this.forceTarget.lerp(this.forceInput,this.forceLerp||1),this.updateControls(s,i,r,n),this.updateCollisions(t,r),this.updateRotation()}storePreviousPosition(){this.previousPosition.copy(this.position)}computeAppliedVelocity(t){this.appliedVelocity=t>0?xs.subVectors(this.position,this.previousPosition).length()/t:0}respawn(t,s=!0,i=!0,e=!1){s?(this.currentLap=1,this.progress=this.previousProgress=this.validatedProgress=this.furthestProgress=0,this.nextChekpoint=.1,this.teleport(this.spawnPosition,this.spawnRotation,i,e,t)):this.teleport(this.position,this.rotation,i,e,t)}teleport(t,s,i=!0,e=!1,r){if(this.moveToFloor=e,this.position.copy(t),this.rotation.copy(s),this.rotationTarget.copy(this.rotation),this.lastForce.set(0,0,-1),i&&(this.force.set(0,0,0),this.forceTarget.set(0,0,0),this.velocity.set(0,0,0)),r&&r.progress){const t=r.progress.getClosestProgress(this.position);r.progress.getPoint(t,xs),this.position.copy(xs),r.progress.getDirection(t,.01,xs),zs.getEulerFromDirection(xs,vs),this.rotation.y=this.rotationTarget.y=vs.y}}static getEulerFromDirection(t,s){return fs.lookAt(gs.setScalar(0),xs,ms),Ms.setFromRotationMatrix(fs),s.setFromQuaternion(Ms,"YXZ")}}const bs=new Jt,Ss=new n,_s=new n,Cs=new n,Ps=new n;function As(t,s,i){t.add(new rs((new n).fromArray(s,0),(new n).fromArray(s,6),(new n).fromArray(i,3),(new n).fromArray(i,0)))}function ks(t,{closed:s=!1}){const i=new hs;for(let e=0,r=t.length-1;e<r;e++){As(i,t[e],t[e+1])}if(s){As(i,t[t.length-1],t[0])}return i}const Ts=(t,s)=>t+(s-t)*Math.random(),Os=(t,s)=>(t%s+s)%s,Fs=16,Vs=256,qs=new q;new r;const Is=new L,Bs=new L,Ls=new n,Ns=new n,Rs=new n,Ws=new Jt;const Es=new n,Ds=new n;class Ys{constructor(t,s=200,i=5,e=-5){Object.assign(this,{divisions:s,forward:i,backward:e,closestIndex:0,curve:new hs});for(let r=0;r<t.length;r+=12)this.curve.add(new rs((new n).fromArray(t,r+0),(new n).fromArray(t,r+3),(new n).fromArray(t,r+6),(new n).fromArray(t,r+9)));this.points=this.curve.getSpacedPoints(s).map((t=>({point:t})));for(let r=0;r<this.points.length;r++){const t=this.points[r],s=this.points[this.getOffsetIndex(r,-1)],i=this.points[this.getOffsetIndex(r,1)];this.points[r].lineFromPrevious=new gt(s.point,t.point),this.points[r].lineToNext=new gt(t.point,i.point)}}getOffsetIndex(t,s,i=this.points.length){return((t+s)%i+i)%i}getClosestProgress(t,s=0){const{length:i}=this.points;let e=Infinity,r=0;for(let u=0;u<i;u++){const s=this.points[u],i=t.distanceTo(s.point);i<e&&(e=i,r=u)}const n=this.points[r],o=n.lineFromPrevious.closestPointToPointParameter(t,!0),h=n.lineToNext.closestPointToPointParameter(t,!0);let a=0,l=0;o<1?(a=o,l=this.getOffsetIndex(r,-1)):(a=h,l=r);const c=1/this.divisions;return this.getOffsetIndex(c*l+c*a,s,1)}getPoint(t,s){return this.curve.getPointAt(t,s)}getDirection(t,s=1e-5,i){return this.getPoint(Math.max(0,t),Es),this.getPoint(Math.min(1,t+s),Ds),i.copy(Ds.sub(Es))}static generateTransferable(t){const s=t?t.curves.length:0,i=new Float32Array(4*s*3);for(let e=0;e<s;e++){const s=t.curves[e];"CubicBezierCurve3"===s.type?(i[4*e*3+0]=s.v0.x,i[4*e*3+1]=s.v0.y,i[4*e*3+2]=s.v0.z,i[4*e*3+3]=s.v1.x,i[4*e*3+4]=s.v1.y,i[4*e*3+5]=s.v1.z,i[4*e*3+6]=s.v2.x,i[4*e*3+7]=s.v2.y,i[4*e*3+8]=s.v2.z,i[4*e*3+9]=s.v3.x,i[4*e*3+10]=s.v3.y,i[4*e*3+11]=s.v3.z):"LineCurve"===s.type&&(i[4*e*3+0]=s.v1.x,i[4*e*3+1]=s.v1.y,i[4*e*3+2]=s.v1.z,i[4*e*3+3]=s.v1.x,i[4*e*3+4]=s.v1.y,i[4*e*3+5]=s.v1.z,i[4*e*3+6]=s.v2.x,i[4*e*3+7]=s.v2.y,i[4*e*3+8]=s.v2.z,i[4*e*3+9]=s.v2.x,i[4*e*3+10]=s.v2.y,i[4*e*3+11]=s.v2.z)}return i}}const Xs=function(t){const s=new Array;return function t(s,i,e=null){i(s,e,s);for(let r in s){let n=s[r];n instanceof Object?t(n,i,r):i(n,e,s)}}(t,(t=>{(function(t){try{return t instanceof ArrayBuffer||t instanceof MessagePort||t instanceof ImageBitmap||t instanceof OffscreenCanvas}catch(s){return!1}})(t)&&s.push(t)})),s},Js=new class{constructor({maxSize:t=8,maxLevel:s=16,boundingBox:i=null,layers:e={all:new Set,enabled:new Set}}){return Object.assign(this,{maxSize:t,maxLevel:s,boundingBox:i,layers:e,bounds:new tt,triangles:new Array,subTrees:new Array}),this}updateBoundingBox(){return this.boundingBox=this.bounds.clone(),this.boundingBox.min.x-=.01,this.boundingBox.min.y-=.01,this.boundingBox.min.z-=.01,this}split(t,s){if(s.boundingBox){const i=new Array,e=cs.copy(s.boundingBox.max).sub(s.boundingBox.min).multiplyScalar(.5);for(let n=0;n<2;n++)for(let r=0;r<2;r++)for(let o=0;o<2;o++){const h=new tt;h.min.copy(s.boundingBox.min).add(ls.set(n,r,o).multiply(e)),h.max.copy(h.min).add(e),i.push({level:t,triangles:new Array,subTrees:new Array,boundingBox:h})}let r=null;for(;r=s.triangles.pop();)for(const t of i)t.boundingBox.intersectsTriangle(r.triangle)&&t.triangles.push(r);for(const n of i){const{length:i}=n.triangles;i>this.maxSize&&t<this.maxLevel&&this.split(t+1,n),0!==i&&s.subTrees.push(n)}}return this}build(){return this.updateBoundingBox(),this.split(0,this),this}getRayTriangles(t,s,i,e){for(const r of t.subTrees)if(s.intersectsBox(r.boundingBox))if(r.triangles.length>0)for(const t of r.triangles)i.includes(t)||e&&e!==t.layerID||i.push(t);else this.getRayTriangles(r,s,i,e);return i}triangleSphereIntersect(t,{triangle:s}){if(s.getPlane(us),!t.intersectsPlane(us))return!1;const i=Math.abs(us.distanceToSphere(t)),e=t.radius*t.radius-i*i,r=us.projectPoint(t.center,ls);if(s.containsPoint(t.center))return{normal:us.normal.clone(),depth:Math.abs(us.distanceToSphere(t))};const n=[[s.a,s.b],[s.b,s.c],[s.c,s.a]];for(let o=0;o<n.length;o++){ds.set(n[o][0],n[o][1]),ds.closestPointToPoint(r,!0,cs);const s=cs.distanceToSquared(t.center);if(s<e)return{normal:t.center.clone().sub(cs).normalize(),depth:t.radius-Math.sqrt(s)}}return!1}getSphereTriangles(t,s,i){for(const e of t.subTrees)if(s.intersectsBox(e.boundingBox))if(e.triangles.length>0)for(const t of e.triangles)this.layers.enabled.has(t.layerID)&&-1===i.indexOf(t)&&i.push(t);else this.getSphereTriangles(e,s,i)}sphereIntersect(t,s,i=2*Math.PI){ys.copy(t);const e=new Array,r=new Array,o=new Set;let h=!1,a=new n,l=Infinity;this.getSphereTriangles(this,t,e);for(const n of e){const e=this.triangleSphereIntersect(ys,n);if(e){const c=s.angleTo(e.normal);c<=i&&c<l&&(l=c,a.add(e.normal).normalize()),ys.center.add(e.normal.multiplyScalar(e.depth));const u=ys.center.clone().sub(t.center),d=u.length();u.y>0&&(h=!0),r.push({depth:d,hit:e,normal:u,angle:c,triangle:n.triangle,layerID:n.layerID}),o.add(n.layerID)}}let c=0;if(!h){ps.set(ys.center,ls.set(0,-1,0));c=this.rayIntersect(ps.ray).distance}return{hits:r,isOnFloor:h,distanceFromFloor:c,orientation:a,layers:o}}rayIntersect(t,s){if(t.direction.length()>0){const i=new Array;let e,r,n=1e100;this.getRayTriangles(this,t,i,s);for(const s of i){const i=t.intersectTriangle(s.triangle.a,s.triangle.b,s.triangle.c,!0,ls);if(i){const o=i.sub(t.origin).length();n>o&&(r=i.clone().add(t.origin),n=o,e=s)}}return n<1e100&&{distance:n,triangle:e,position:r}}return null}add(t,s,i){this.layers.all.has(i)||(this.layers.all.add(i),this.layers.enabled.add(i));for(let e=0;e<t.count;e+=3){const r=(new n).fromBufferAttribute(t,e),o=(new n).fromBufferAttribute(t,e+1),h=(new n).fromBufferAttribute(t,e+2);r.applyMatrix4(s),o.applyMatrix4(s),h.applyMatrix4(s);const a=new Vt(r,o,h),{min:l,max:c}=this.bounds;Object.assign(l,{x:Math.min(l.x,r.x,o.x,h.x),y:Math.min(l.y,r.y,o.y,h.y),z:Math.min(l.z,r.z,o.z,h.z)}),Object.assign(c,{x:Math.max(c.x,r.x,o.x,h.x),y:Math.max(c.y,r.y,o.y,h.y),z:Math.max(c.z,r.z,o.z,h.z)}),this.triangles.push({triangle:a,layerID:i})}}toggleLayer(t,s=null){if(this.layers.all.has(t)){const i=null!==s?s:!this.layers.enabled.has(t);this.layers.enabled[i?"add":"delete"](t)}}}({maxLevel:16,maxSize:8}),js=new class{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=t(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let s=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const i=t();s=(i-this.oldTime)/1e3,this.oldTime=i,this.elapsedTime+=s}return s}},Zs=new class extends I{constructor(){super(),this.rotation.reorder("YXZ"),Object.assign(this,{mode:as.FREE,target:new n,worldPosition:new n,previousPosition:new n,worldDirection:new n,previousDirection:new n,distance:5,elevation:2.5,offset:new n,slideFactor:0,lerpFactor:1,curveFocus:.5,curveLookAhead:.05,intersectGround:!1,intersectObjects:!1})}get data(){const t=Ss.copy(this.worldPosition).sub(this.previousPosition).length(),s=Ss.copy(this.worldDirection).sub(this.previousDirection).length();return{position:{x:this.worldPosition.x,y:this.worldPosition.y,z:this.worldPosition.z},rotation:{x:this.rotation.x,y:this.rotation.y,z:this.rotation.z},still:t+s<=1e-4}}set mode(t){Object.values(as).includes(t)&&(this._mode=t,t===as.NONE?this.updateMode=()=>{}:t===as.FREE?this.updateMode=this.updateFreeAroundPlayer:t===as.STICKY?this.updateMode=this.updateStickyToPlayer:t===as.FOLLOW_CURVE&&(this.updateMode=this.updateFollowingCurve))}updateFreeAroundPlayer(t,s,i,e){const r=s.forceTarget.x*Math.abs(s.absoluteMove||s.forceTarget.z)*(s.reverseBackwardStearing?-s.forceTarget.z:1)*(100*e);Ss.copy(s.position).add(this.offset),_s.copy(this.target).lerp(Ss,.4),this.lookAt(_s),this.target.copy(_s);let n=s.position.y,o=this.distance;if(Ss.copy(this.position).sub(s.position),_s.copy(Ss).applyAxisAngle(Cs.set(0,1,0),-Math.PI*this.slideFactor*r).add(s.position),this.position.copy(_s),this.intersectObjects){bs.set(s.position,Ss);const i=t.rayIntersect(bs.ray);o=i&&i.distance<this.distance?i.distance:this.distance}if(this.intersectGround){bs.set(Ss.copy(this.worldPosition).setY(t.boundingBox.max.y+1),_s.set(0,-1,0));const s=t.rayIntersect(bs.ray,"ground"),i=t.boundingBox.max.y+1-s.distance;i>n&&(n=i)}n+=this.elevation;const h=Ss.copy(this.position).setY(s.position.y).distanceTo(s.position)-o;this.position.addScaledVector(this.worldDirection,h*this.lerpFactor),this.position.setY(this.position.y+.5*(n-this.position.y))}updateStickyToPlayer(t,s){Ss.set(0,0,1).applyAxisAngle(_s.set(0,1,0),s.rotation.y).multiplyScalar(this.distance).add(s.position),Ss.y+=this.elevation,this.position.lerp(Ss,this.lerpFactor),this.lookAt(s.position)}updateFollowingCurve(t,s,i){const e=i.progress.getClosestProgress(s.position,this.curveLookAhead);i.lookAt.getPoint(e,Ss),_s.copy(Ss).setY(s.position.y+this.elevation),Cs.subVectors(s.position,_s).setY(0),Ps.copy(Cs).normalize(),Cs.add(_s).add(Ps.multiplyScalar(this.distance)),this.position.lerp(Cs,.05),Ss.lerp(s.position,this.curveFocus),_s.copy(this.target).lerp(Ss,.1),this.lookAt(_s),this.target.copy(_s)}update(t,s,i,e){this.previousPosition.copy(this.worldPosition),this.previousDirection.copy(this.worldDirection),this.getWorldPosition(this.worldPosition),this.getWorldDirection(this.worldDirection),this.updateMode(t,s,i,e)}respawn(t){this.rotation.set(t.rotation.x,t.rotation.y,t.rotation.z),this.position.copy(t.position),this.target.copy(t.position),this.updateMatrixWorld(),this.getWorldPosition(this.worldPosition),this.getWorldDirection(this.worldDirection)}},Us=new zs(.35);Object.assign(Us,{curveLookAhead:.01,curveFocus:.5,spawnPosition:new n,spawnRotation:new f});const Qs=new Object,Hs=new class{constructor(){this.colliders=new Array,this.collidersByID={}}get data(){return this.colliders.map((({center:t,isCollidingWithPlayer:s,isOnFloor:i})=>({position:{x:t.x,y:t.y,z:t.z},isCollidingWithPlayer:s,isOnFloor:i})))}add({id:t,position:s,radius:i,mode:e,moveToFloor:r=!1,move:o=null},h){const a=(new n).fromArray(s),l=new zt(a,i),c=e&Fs,u=e&Vs;if(Object.assign(l,{reactToPhysics:c,reactToPlayer:u,velocity:new n,rotation:new f,isOnFloor:!1,isCollidingWithPlayer:!1}),l.update=c||u?c&&!u?this.updatePhysicsOnly.bind(this):!c&&u?this.updatePlayerOnly.bind(this):this.updateAll.bind(this):this.updateStatic.bind(this),r&&(l.moveToFloor=!0,this.moveSphereToFloor(h,l)),o){const t=l.moveState={vel:0,maxVel:o.velocity||2.3,prevPos:l.center.clone(),fov:new n,fovOffset:1,fovSqRadius:7,pauseMin:o.pauseMin||0,pauseMax:o.pauseMax||0,pauseDelay:0,elapsedSinceCast:0};switch(t.acceleration=o.velocity>4?8:2.5,o.type){case"curveLoop":t.isCurveLoop=!0,t.isFollowingCurve=!0,t.curve=ks(o.curve.points,{closed:!0}),t.distance=0,t.length=t.curve.getLength(),l.center.x=o.curve.points[0][0],l.center.z=o.curve.points[0][2];break;case"curvePingPong":t.isCurvePingPong=!0,t.isFollowingCurve=!0,t.curve=ks(o.curve.points,{closed:!1}),t.distance=0,t.isReverse=!1,t.length=t.curve.getLength(),l.center.x=o.curve.points[0][0],l.center.z=o.curve.points[0][2];break;case"points":t.isPoints=!0,t.points=o.curve.points.map((t=>new L(t[0],t[2]))),t.prevTarget=0,t.canSkipPoint=!o.noSkips,t.target=1,l.center.x=t.points[0].x,l.center.z=t.points[0].y;break;case"area":t.isArea=!0,t.center=new L(l.center.x,l.center.z),t.radius=o.radius,t.target=new L,t.moving=!1}}this.colliders.push(l),t&&(this.collidersByID[t]=l)}stop(t,s){const i=this.collidersByID[t];i&&i.moveState&&(i.moveState.isStopped=!!s)}cull(t,s){const i=this.collidersByID[t];i&&(i.isCulled=!!s)}updateSphereGroundCasting(t,s,i){const e=t.moveState.isArea||t.moveState.isPoints;t.isCulled?t.moveState.elapsedSinceCast>.25?this.moveSphereToFloor(s,t):e||(t.moveState.elapsedSinceCast+=i):this.moveSphereToFloor(s,t)}moveSphere(t,s,i,e){const r=t.moveState;if(r.isStopped)return r.pauseDelay=Math.max(r.pauseDelay,1.8),r.vel=0,void this.updateSphereGroundCasting(t,s,e);t.center.distanceToSquared(r.prevPos)>5e-6&&(r.prevPos.y=t.center.y,qs.position.copy(r.prevPos),qs.lookAt(t.center),qs.localToWorld(r.fov.set(0,0,r.fovOffset)));const n=i.position.distanceToSquared(r.fov);if(r.prevPos.copy(t.center),n<r.fovSqRadius)return r.pauseDelay=Math.max(r.pauseDelay,2),r.vel=0,void this.updateSphereGroundCasting(t,s,e);if(r.pauseDelay>0)return r.pauseDelay-=e,r.vel=0,void this.updateSphereGroundCasting(t,s,e);if(r.vel<r.maxVel&&(r.vel=Math.min(r.maxVel,r.vel+e*r.acceleration)),r.isFollowingCurve){if(r.isCurveLoop)r.distance=(r.distance+r.vel*e)%r.length;else if(r.isCurvePingPong){const t=r.isReverse,s=t?-r.vel:r.vel;r.distance=r.distance+s*e,t&&r.distance<=0?(r.isReverse=!1,r.distance=0,r.pauseDelay=Ts(r.pauseMin,r.pauseMax)):!t&&r.distance>r.length&&(r.isReverse=!0,r.distance=r.length,r.pauseDelay=Ts(r.pauseMin,r.pauseMax))}const s=r.distance/r.length,i=r.curve.getPointAt(s);t.center.x=i.x,t.center.z=i.z}else if(r.isPoints){const s=r.points[r.target],i=Is.set(t.center.x,t.center.z),n=Bs.subVectors(s,i),o=n.length();let h=r.vel*e;if(o<=h){h=o;const t=r.points.length,s=Math.random();let i=1;r.canSkipPoint&&s<.08?i=-2:r.canSkipPoint&&s>.92?i=2:s<.3&&(i=-1);let e=Os(r.target+i,t);e===r.prevTarget&&(i=r.target-r.prevTarget,e=Os(r.target+i,t)),r.prevTarget=r.target,r.target=e,r.pauseDelay=Ts(r.pauseMin,r.pauseMax)}const a=n.normalize().multiplyScalar(h);t.center.x+=a.x,t.center.z+=a.y}else if(r.isArea)if(r.moving){const s=Is.set(t.center.x,t.center.z),i=Bs.subVectors(r.target,s),n=i.length();let o=r.vel*e;n<=o&&(r.moving=!1,r.pauseDelay=Ts(r.pauseMin,r.pauseMax));const h=i.normalize().multiplyScalar(o);t.center.x+=h.x,t.center.z+=h.y}else!function(t,s,i){const e=Ts(0,2*Math.PI),r=Ts(0,i);t.x=s.x+Math.cos(e)*r,t.y=s.y+Math.sin(e)*r}(r.target,r.center,r.radius),r.moving=r.target.distanceToSquared(r.center)>.1;this.updateSphereGroundCasting(t,s,e)}moveSphereToFloor(t,s){s.moveState&&(s.moveState.elapsedSinceCast=0);const i=Rs.copy(s.center);i.y+=.5,Ws.set(i,Ls.set(0,-1.2,0));const e=t.rayIntersect(Ws.ray);e&&(s.center.copy(e.position),s.center.y+=s.radius)}updateSphereCollisionsToWorld(t,s,i,e){t.velocity.y-=i*e,t.center.addScaledVector(t.velocity,e);const{hits:r,isOnFloor:n}=s.sphereIntersect(t,Ls.set(0,1,0));t.isOnFloor=n;for(const h of r)n||t.velocity.addScaledVector(h.normal,1.5*-h.normal.dot(t.velocity)),t.translate(h.normal.multiplyScalar(h.depth));const o=Math.exp(-1.5*e)-1;t.velocity.addScaledVector(t.velocity,o)}updateSphereCollisionsToPlayer(t,s){const i=t.radius+s.radius,e=t.center.distanceTo(s.position);if(e<i){Ls.subVectors(t.center,s.position).normalize();const r=e-i;s.position.addScaledVector(Ls,r)}}updateSpheresCollisionsToSpheres(t){for(const s of this.colliders)if(s.reactToPhysics){const i=t.center.distanceToSquared(s.center),e=t.radius+s.radius;if(i<e*e){Ls.subVectors(t.center,s.center).normalize(),Ns.copy(Ls).multiplyScalar(Ls.dot(t.velocity)),Rs.copy(Ls).multiplyScalar(Ls.dot(s.velocity)),t.velocity.add(Rs).sub(Ns),s.velocity.add(Ns).sub(Rs);const r=(e-Math.sqrt(i))/2;t.center.addScaledVector(Ls,r),s.center.addScaledVector(Ls,-r)}}}updateStatic(t,s,i,e,r){t.moveState&&this.moveSphere(t,s,i,r)}updatePhysicsOnly(t,s,i,e,r){this.updateSphereCollisionsToWorld(t,s,e,r),this.updateSpheresCollisionsToSpheres(t)}updatePlayerOnly(t,s,i,e,r){t.moveState&&this.moveSphere(t,s,i,r),t.isCulled||this.updateSphereCollisionsToPlayer(t,i)}updateAll(t,s,i,e,r){this.updateSphereCollisionsToWorld(t,s,e,r),this.updateSphereCollisionsToPlayer(t,i),this.updateSpheresCollisionsToSpheres(t)}update(t,s,i,e){for(const r of this.colliders)r.update(r,t,s,i,e)}};let Gs=!1;function $s(){const t=Math.min(.05,js.getDelta()),s=t/5;Us.storePreviousPosition(),Us.updateVelocity(30,t);for(let r=0;r<5;r++)Us.update(Js,Zs,Qs,30,s,4===r),Hs.update(Js,Us,30,s);Us.computeAppliedVelocity(t),Zs.update(Js,Us,Qs,t);const i=Us.data,e=Zs.data;return{canPause:Gs&&i.still&&e.still,player:i,camera:e,spheres:Hs.data}}function Ks(t,s){for(let i in s)void 0!==s[i].x?t[i].copy(s[i]):t[i]=s[i]}self.addEventListener("message",(t=>{let s=null;if(12===t.data)return s=$s(),void postMessage({type:"update",data:s});if(45===t.data[0])return s=$s(),postMessage({type:"update",data:s}),void Us.move(t.data[1],t.data[2],t.data[3]);const{type:i,data:e,messageID:r}=t.data;"toggle-layer"===i?Js.toggleLayer(e.layerID,e.force):"set-player-options"===i?Ks(Us,e):"toggle-pause"===i?Gs=!!e:"set-camera-options"===i?Ks(Zs,e):"respawn-player"===i?(Us.respawn(Qs,e.reset,e.resetForces,e.moveToFloor),Zs.respawn(Us)):"add-sphere"===i?Hs.add(e,Js):"stop-sphere"===i?Hs.stop(e.id,e.value):"cull-sphere"===i?Hs.cull(e.id,e.value):"add-batch"===i?function(t){for(const{array:s,itemSize:i,normalized:e,layerID:r,matrix:n}of t)if(s.length){const t=new K(s,i,e);Js.add(t,n,r)}Js.build()}(e):"add-curve"===i&&(Qs[e.name||"curve"]=new Ys(e.points,e.divisions)),function(t,s,i){const e=Xs(s);postMessage({type:t,data:s,messageID:i},e)}(i,s,r)}))}();
